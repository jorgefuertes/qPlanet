a:3:{s:5:"child";a:1:{s:0:"";a:1:{s:3:"rss";a:1:{i:0;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:1:{s:7:"version";s:3:"2.0";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:0:"";a:1:{s:7:"channel";a:1:{i:0;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:27:"http://www.w3.org/2005/Atom";a:1:{s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:45:"tag:blogger.com,1999:blog-5022667766051686813";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:0:"";a:7:{s:13:"lastBuildDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 10 Dec 2008 17:19:55 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:9:"MonoCaffe";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:33:"Software orientado al Open Source";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:30:"http://monocaffe.blogspot.com/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:14:"managingEditor";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"generator";a:1:{i:0;a:5:{s:4:"data";s:7:"Blogger";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"item";a:25:{i:0;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-9176778830884122630";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 10 Dec 2008 17:14:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:4:{i:0;a:5:{s:4:"data";s:4:"java";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:5:"world";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:5:"hello";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:5:"jboss";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:12:"Hello JBoss5";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:1994:"<p>Aprovechando y para celebrar el lanzamiento de JBoss5 quiero hacer un "Hola Mundo" para demostrar la sencillez de los EJB3 y acallar un poco los comentarios de fanboys de otros lenguajes que dicen que desarrollar un simple "Hola Mundo" en J2EE es demasiado complicado.<br /></p><p><br />Lo primero será crear un proyecto en tu IDE favorito.<br /></p><p><br />A continuación creamos la interfaz y la clase que vamos a utilizar para nuestro ejemplo, la cual llamaremos <i>TestJboss5Bean</i></p><br /><pre name="code" class="java"><br />@Stateless<br />@Remote(TestJboss5.class)<br />public class TestJboss5Bean implements TestJboss5{<br /> public String sayHelloWorld(){<br />  return "Hello World on Jboss5";<br /> }<br />}<br /></pre><br /><p><br />Ahora la interfaz<br /></p><br /><pre name="code" class="java"><br />public interface TestJboss5{<br /> public String sayHelloWorld();<br />}<br /></pre><br /><p><br />Y ahora el cliente para comprobar que funciona<br /></p><br /><pre name="code" class="java"><br />public class DoTestJboss5(){<br /> public static void main(String[] args){<br />  Properties properties = new Properties();<br />  properties.put("java.naming.factory.initial","org.jnp.interfaces.NamingContextFactory");<br />  properties.put("java.naming.factory.url.pkgs","org.jboss.naming:org.jnp.interfaces");<br />  properties.put("java.naming.provider.url","localhost:1099");<br />  <br />  try {<br />   Context context = new InitialContext(properties);<br />   Object ob = context.lookup("TestJboss5Bean/remote");<br />   TestJboss5 test = (TestJboss5)ob;<br />   System.out.println(test.sayHello());<br />  } catch (NamingException e) {<br />   // TODO Auto-generated catch block<br />   e.printStackTrace();<br />  }<br /> }<br />}<br /></pre><br /><p><br />Ahora creamos el JAR y lo copiamos a <tt>jboss-5.0.0.GA/server/default/deploy/</tt>.Realizará el despliegue y ejecutamos la aplicación desde nuestro IDE.</p><p><br /><br />Fácil y rápido... ¿verdad?</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:55:"http://monocaffe.blogspot.com/2008/12/hello-jboss5.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:24:"2008-12-10T17:19:55.467Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:1;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-5717529942733674851";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 09 Dec 2008 12:31:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:3:{i:0;a:5:{s:4:"data";s:4:"java";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:1:"5";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:5:"jboss";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:15:"Ya está aquí!";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:207:"Después de muchos años de desarrollo continuo, ha sido lanzada la nueva versión 5 de Jboss.<br /><br />Un tanto eclipsada por el lanzamiento de JavaFX quizás, pero en mi opinión, mucho más interesante.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:53:"http://monocaffe.blogspot.com/2008/12/ya-est-aqu.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:24:"2008-12-09T12:32:57.815Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"3";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:2;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-3459801127702395806";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 30 Oct 2008 14:57:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:6:{i:0;a:5:{s:4:"data";s:4:"java";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:4:"ejb3";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:6:"remote";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:9:"interface";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:4;a:5:{s:4:"data";s:7:"session";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:5;a:5:{s:4:"data";s:5:"local";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:28:"Accede a tus EJB3 de Sesión";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3962:"Quiero explicar cómo acceder de distintas maneras a un sEJB ejecutándose en un servidor de aplicaciones.<br /><br />Además quiero hablar sobre las interfaces de los sEJB y cierta ventaja de salirse un poco del camino establecido por los tutoriales que se encuentran en la web dada las grandes posibilidades de implementación y configuración de los sEJB y sus interfaces.<br /><br />¿Interfaces remotas o locales o las dos?<br /><br />Depende, pero es mejor preguntarse ¿quién debe poder acceder a mi sEJB?<br /><br />Como regla general, prefiero que cada EJB sea sólo utilizado como remoto o como local, no ambos. y así limitarlos según sea necesario.<br /><br />La principal diferencia entre una interfaz local y una remota, es la manera en que el servidor de aplicaciones sirve el sEJB. Con las interfaces remotas, los objetos son enviados como valores y con las locales, se envían los objetos como referencias. Para conocer esto, el contenedor depende de la llamada que utilicemos: <tt>local</tt> o <tt>remote</tt><br /><br />Ahora, podemos definir las dos interfaces que implementen métodos distintos según nuestras necesidades, como evitar que los clientes remotos accedan a ciertos métodos que deseamos utilizar en local.<br /><br />Un pequeña práctica que me gusta implementar es la de <b>no</b> utilizar la notación <tt>@remote</tt> o <tt>@local</tt> en las interfaces. En su lugar, prefiero utilizarlas directamente en el EJB que las implementa. Así podremos tener implementaciones  de estas interfaces independientes del EJB. Dado que no podemos tener la certeza de que cualquier servicio proporcionado por estas interfaces vaya a ser un EJB prefiero mantener las interfaces por separado.<br /><br />Seguimos necesitando indicar en alguna parte que estas interfaces son la local y remota de nuestro sEJB. Para lograr esto utilizamos la misma notación, pero ésta vez en el sEJB directamente:<br /><br /><pre name="code" class="java"><br /><br />@Stateless<br />@Local(MyTest.class)<br />@Remote(MyTestRemote.class)<br />public class MyTestBean implements MyTest, MyTestRemote{<br />//...<br />}<br /></pre><br />Ya habiendo definido el sEJB y sus interfaces, vamos a utilizarlas desde un cliente remoto y desde otro EJB incluido dentro del mismo EAR.<br /><br />Lo más importante, es conocer la URI donde vamos a encontrar al EJB. Dado que lo hemos incluido dentro del EAR <i>MyEA</i> podremos acceder a las dos interfaces con los siguientes nombres:<br /><ul><br /><li>/MyEA/MyTestBean/remote</li><br /><li>/MyEA/MyTestBean/local</li><br /></ul><br /><br />El cliente remoto tendrá que hacer algo como lo siguiente, para poder obtener una instancia del EJB desplegado en un servidor JBoss:<br /><br /><pre name="code" class="java"><br /><br />Properties properties = new Properties();<br />properties.put("java.naming.factory.initial","org.jnp.interfaces.NamingContextFactory");<br />properties.put("java.naming.factory.url.pkgs","org.jboss.naming:org.jnp.interfaces");<br />properties.put("java.naming.provider.url","localhost:1099");<br />       <br />Context context = new InitialContext(properties);<br />MyTestRemote remote = (MyTestRemote)context.lookup("MyEA/MyTestBean/remote");<br />//...<br /></pre><br /><br />Para un EJB o POJO que está desplegado junto a MyTestBean en el EAR, debemos hacer algo parecido:<br /><br /><pre name="code" class="java"><br /><br />Context context = new InitialContext();<br />MyTest bean = (MyTest)context.lookup("MyEA/MyTestBean/local");<br />//...<br /></pre><br /><br />Como veréis, no hace falta indicar las propiedades del contexto inicial ya que el servidor lo inicializará por nosotros.<br /><br />Es importante no caer en el error de instanciar directamente un sEJB desde alguna de nuestras clases, ya que las inyección realizadas por el contenedor no se van a realizar. Por ejemplo, las unidades de persistencia no funcionarán y obtendremos un <tt>NPE</tt> poco explicativo.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:67:"http://monocaffe.blogspot.com/2008/10/accede-tus-ejb3-de-sesin.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:24:"2008-10-30T16:24:40.178Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:3;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-8781998601413421583";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 27 Oct 2008 09:45:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:6:{i:0;a:5:{s:4:"data";s:3:"sql";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:4:"java";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:6:"stored";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:10:"proceedure";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:4;a:5:{s:4:"data";s:8:"practice";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:5;a:5:{s:4:"data";s:3:"dba";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:37:"Los Stored Proceedures son tus amigos";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4891:"En todos los lugares en los que he trabajado, la figura del DBA es bastante habitual, y es normal, hace falta al menos una persona para la labor, que además tenga la experiencia y los nervios para trabajar con datos reales sin destrozar el negocio en pocos segundos. Los pobres tienen que convivir con usuarios, clientes y desarrolladores, y de vez en cuando, con la dirección. Todos pidiendo informes extraños y miles de cosas que además, tienen que implementar con algo tan doloroso como es SQL (para mi, al menos).<br />Gracias a herramientas como <b>Hibernate</b>, y <a href="http://java-source.net/open-source/persistence">muchas otras</a>, los programadores podemos olvidarnos de SQL y concentrarnos en nuestro lenguaje. Pero no siempre una capa de persistencia es la solución.<br />Muchas veces, nos encontramos con que la información está en distintos lugares (queues, BB.DD., sistemas de ficheros) pero el caso más común, es conectarte a distintas BB.DD. para obtener ingentes cantidades de información o verificaciones sobre datos y es aquí donde no vamos a utilizar estas herramientas, ya que realmente no vamos a realizar ninguna tarea de persistencia, sólo vamos a utilizar la R de <a href="http://es.wikipedia.org/wiki/CRUD">CRUD</a>.<br />¿Hasta dónde debemos llegar con estas búsquedas? En mi opinión, cualquier búsqueda más complicada que un <tt>SELECT x FROM y WHERE a = b</tt> debe ser un <a href="http://es.wikipedia.org/wiki/Stored_procedure">procedimiento almacenado</a>.<br />Los <i>stored procedures</i> o <i>sp</i> nos permiten  obtener un nuevo nivel de abstracción entre el código y los datos. Son una caja negra con la que siempre debemos cumplir y la que siempre debe cumplir con sus especificaciones. Es decir, si al <i>sp_test</i> yo le doy dos enteros y espero que me devuelva una cadena, siempre debe ser así. Internamente, el <i>sp</i> puede cambiar, pero siempre que se ciña al <a href="http://en.wikipedia.org/wiki/Design_by_contract"><i>contrato</i></a>, el código (probablemente, desplegado en producción o distribuido a miles de empleados) no tiene por que cambiar.<br />Además, es mucho más fácil buscar y modificar un <i>sp</i> ya que estos están en un mismo sitio. Probablemente, los cree o modifique un DBA que conoce SQL en lugar de un programador con dudosa experiencia en SQL. Y el código queda mucho más legible y limpio, ya que no hace falta interpretar una query gigante.<br />Ejemplo gráfico:<br />Esta es una <a href="http://www.google.es/codesearch?hl=es&q=show:sz7odqZPRKg:AoKJ04wiEPw:sz7odqZPRKg&sa=N&ct=rd&cs_p=http://aggregatord.googlecode.com/svn&cs_f=trunk/src/edu/usu/cosl/aggregatord/MicroformatHarvester.java">query</a> perfecta para nuestro ejemplo: es bastante larga, tiene una finalidad bien definida y los parámetros son siempre los mismos:<br /><br /><pre name="code" class="java"><br />private final static String QUERY_ENTRIES_NEEDING_HARVEST =<br />"SELECT entries.id, entries.permalink, age(now(), harvested_at) " + <br />"FROM watched_pages " +<br />"INNER JOIN entries ON watched_pages.entry_id = entries.id " +<br />"WHERE feed_id = 0 AND (harvested_at IS NULL OR " +<br />"(age(now(), harvested_at) > interval '24:00:00' AND has_microformats = 't'))";<br /></pre><br /><br />Esto puede convertirse en la pesadilla de algún programador, ya que buscar fallos en código SQL desde otro lenguaje es realmente doloroso: no se tiene <i>syntax highlighting</i>, verificación de datos (¿la tabla existe o no?¿está bien la llamada a la tabla o era  X.dbo.Y?). Si además, el próximo programador, no tiene ni idea de SQL, ya es un largo tiempo que tendrá que utilizar para aprender qué demonios es <tt>INNER JOIN</tt> con los consiguientes problemas que esto acarrea. Si el nombre de alguna tabla cambia, habrá que realizar un nuevo despliegue o distribución de la aplicación corregida.<br />La solución habría sido darle esta query o un "<i>contrato</i>" a tu DBA especificando tus necesidades, lo que puedes proveer y lo que deseas recibir. Una query así, para un programador, puede resultar bastante complicada de entender, pero para un DBA, con sus herramientas específicas y con sus amplios conocimientos, esto es como ver un "<i>Hello World</i>". Probablemente, el DBA nos devolverá un correo para decirnos que ya podemos utilizar el <i>sp</i> <tt>sp_entries_needing_harvest()</tt>. Y nuestro código será algo como esto:<br /><br /><pre name="code" class="java"><br />//...<br />CallableStatement cstmt = cx.prepareCall("{ ? = call sp_query_entries_needing_harvest()}");<br />cstmt.registerOutParameter(1, Types.VARCHAR);<br />//...<br /></pre><br /><br />De ésta manera, además de abstraer un poco más nuestro código de los datos, estamos delegando tareas y responsabilidades en quien debe ser: el DBA. Si algo falla en esa <i>sp</i> el marrón será del él/ella :)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:80:"http://monocaffe.blogspot.com/2008/10/los-stored-proceedures-son-tus-amigos.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:24:"2008-10-27T09:57:47.774Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"2";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:4;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:4:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:69:"tag:blogger.com,1999:blog-5022667766051686813.post-955507553681116028";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 23 Oct 2008 18:15:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:4:{i:0;a:5:{s:4:"data";s:4:"lock";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:3:"day";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:4:"caps";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:6:"ubuntu";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:28:"Dia del CapsLock o BloqMayus";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4102:"Es que además tiene un nombre gracioso, pero ¿cuál es su utilidad?<br /><br />Para cualquier persona estudiada, la tecla sobra, de hecho, la <a href="http://laptop.org/">OLPC</a> no trae la tecla maldita.<br /><br />Veamos un pequeño resumen del uso de la tecla innombrable:<br /><br />1- Quienes no hayan tenido la oportunidad de toparse con un hoygan, leed este <a href="http://www.frikipedia.es/friki/Hoygan">articulo</a> de la frikipedia.<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://www.frikipedia.es/images/c/c4/Computadora-HOYGAN.jpg"><img style="display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 478px; height: 283px;" src="http://www.frikipedia.es/images/c/c4/Computadora-HOYGAN.jpg" border="0" alt="" /></a><br /><br /><quote><br />DIZESE DE UNA ESTRAÑAS CRIATURAS CUYA HARMA MAS MORTAL ES EL HIDIOMA DEL MISMO NOMBRE CON CASI TODAS LA LETRAS MAYUSCULAS QUE SON MAS VONITAS Y UNA ECTRAÑA HORTOGRAFIA. SU AVITAT NATURAL SON LOS CHAS Y LOS FOROS DEL INTERNETE.<br /></quote><br />2- Ciertos especímenes, que en lugar de cambiar la resolución de pantalla o el tamaño de las fuentes, deciden que todo queda mejor en mayúsculas.<br /><br />Pero la verdadera connotación de la tecla, lo que cualquiera con dos dedos de frente y cierto tiempo "utilizando Internet" entiende, es la de un grito.<br /><br />Veamos, aunque parezca algo absurdo, es difícil dar un "tono" a una conversación escrita, ya sea vía IM, email o en chats. Para intentar subsanar esto, el ser humano, siempre tan creativo, utiliza los emoticons para expresar emociones, símbolos para expresar entonación y las mayúsculas, para gritar.<br />Ejemplos:<br />:) -> Feliz<br />_idiota_ -> énfasis<br />IDIOTA -> grio<br /><br />"<i>Pero, muchas veces estoy escribiendo y no me doy cuenta de que tengo la tecla activada y no voy a volver a escribir todo</i>"<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://www.geekologie.com/2008/01/02/USB-eye-warmer.jpg"><img style="display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 450px; height: 398px;" src="http://www.geekologie.com/2008/01/02/USB-eye-warmer.jpg" border="0" alt="" /></a><br /><br />Querido amigo, querida amiga, levanta la cabeza del teclado y apúntate a unas clases de taquigrafía. Por otra parte, aquí, como siempre, os voy a dar la solución a todos vuestros problemas: eliminar la tecla. No me refiero a sacarla de <b>cuajo</b> del teclado, me refiero a darle una función más acorde con una tecla de tan importante localización. Que si fuera un solar, estaría al lado de la Cibeles o en medio de la Pza. de Cataluña :)<br /><br /><h1>Como eliminar la tecla en Ubuntu</h1><br />Podemos asignarle muchas tareas a esta tecla, la más común es la de emular el comportamiento de la tecla <tt>Ctrl</tt> (¿algún usuario de emacs por allí?) pero aquí somos un poco más puritanos (además de usuarios de vi) por lo que haremos algo útil con esta tecla que será abrir una consola.<br /><br /><b>1.</b> Abrimos el programa <tt>gconf-editor</tt> ya sea con la combinación <tt>Alt+F2</tt> o desde la consola.<br /><b>2.</b> Navegamos el árbol de la izquierda hasta llegar a <tt>apps/metacity/global_keybindings</tt><br /><b>3.</b> Modificamos la clave <tt>run_command_terminal</tt> añadiendo <tt>Caps_lock</tt><br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://4.bp.blogspot.com/_GKVx1yC7np0/SQDF0ExtivI/AAAAAAAAAhs/kHXAdpWa2X4/s1600-h/Pantallazo-Editor+de+configuraci%C3%B3n+-+global_keybindings.png"><img style="display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 352px; height: 171px;" src="http://4.bp.blogspot.com/_GKVx1yC7np0/SQDF0ExtivI/AAAAAAAAAhs/kHXAdpWa2X4/s400/Pantallazo-Editor+de+configuraci%C3%B3n+-+global_keybindings.png" border="0" alt=""id="BLOGGER_PHOTO_ID_5260421863194856178" /></a><br /><br />Y eso es todo, un feliz día del BloqMayus y recuerda: AQUI NO SE GRITA.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:71:"http://monocaffe.blogspot.com/2008/10/dia-del-capslock-o-bloqmayus.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:29:"2008-10-23T20:05:37.475+01:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:29:"http://search.yahoo.com/mrss/";a:1:{s:9:"thumbnail";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"url";s:144:"http://4.bp.blogspot.com/_GKVx1yC7np0/SQDF0ExtivI/AAAAAAAAAhs/kHXAdpWa2X4/s72-c/Pantallazo-Editor+de+configuraci%C3%B3n+-+global_keybindings.png";s:6:"height";s:2:"72";s:5:"width";s:2:"72";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:5;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:69:"tag:blogger.com,1999:blog-5022667766051686813.post-244306142977605328";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sun, 19 Oct 2008 15:54:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:7:{i:0;a:5:{s:4:"data";s:3:"yql";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:3:"yap";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:4:"open";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:5:"yahoo";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:4;a:5:{s:4:"data";s:3:"3.0";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:5;a:5:{s:4:"data";s:6:"source";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:6;a:5:{s:4:"data";s:3:"web";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:21:"Yahoo's Web 3.0 y OSS";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3895:"Para aquellos quienes no lo sepan aún, cada vez que utilizamos algún sitio como Facebook, Digg, Meneame, Google Maps, Google Docs, etcétera, estamos en el mundo llamado Web 2.0. Sitios (o aplicaciones) que permiten al usuario, tener una verdadera interactividad con la aplicación y con otros usuarios de la misma. ¿Cuál es el punto de inflexión que inicio todo esto? Según <a href="http://es.wikipedia.org/wiki/Web_2.0">Wikipedia</a>, el termino fue acuñado en 2004 por Tim O'Reilly. Sitios como AdSense y Flickr, eran una nueva especie, en la nueva fauna de la web.<br /><br />Cuatro años después, los primeros pasos hacia la llamada Web 3.0 se están dando, y ayer, uno de los grandes jugadores de la escena como lo es Yahoo! con más de 250 MM de usuarios y siendo su sitio "www.yahoo.com" el más visitado y "mail.yahoo.com" muy cerca, lo que ellos esperan sea el futuro con <a href="http://developer.yahoo.net/blog/archives/2008/10/yos_platform.html">Y!OS 1.0</a> enmarcado en una política Open Source y la "socialización" de la web.<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://www.readwriteweb.com/images/YOS_October08.jpg"><img style="display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 400px;" src="http://www.readwriteweb.com/images/YOS_October08.jpg" border="0" alt="" /></a><br /><br />Cómo esto repercute en la comunidad de desarrolladores y en los distintos proyectos, queda por ver, con la esperanza de que gracias a estas iniciativas, el movimiento Open Source tenga verdadera posibilidad de competir bajos las mismas bases, contra las viejas creencias, como se ha demostrado poco a poco por proyectos de gran repercusión.<br /><br />¿Será el año del Web 3.0 el año de Linux en el escritorio? ¿Cuándo, finalmente, millones de usuarios decidan que no necesitan pagar onerosas sumas de dinero por realizar las mismas tareas, de la misma forma que hace 20 años? (MS Office fue lanzado en 1989)<br /><br />¿Qué necesidad tendrá el usuario de a pie, de tener un Sistema Operativo completo, cuando lo único que necesitará será un buen navegador y un WebOS que integre todas las aplicaciones en un sólo sitio?<br /><br />A muchos les podrá parecer esto una barbaridad, ya que las políticas de privacidad y de manejo de datos de muchas multinacionales como MS, Yahoo! y Google, dejan mucho que desear, pero la facilidad y conveniencia de estos cambios, harán replantear muchas estrategias a mucha gente.<br /><br />Por mi parte, llevo mucho tiempo utilizando las herramientas de Yahoo! y de Google, por lo que sí, en mi caso, vería con buenos ojos la idea de un Web OS con todas estas aplicaciones integradas bajo una misma plataforma open source que además, me permita desarrollar soluciones que yo vea convenientes para mis necesidades y mantener un contacto constante con quienes me interesa.<br /><br />Por ejemplo, ahora mismo, ésta entrada no será automáticamente publicada en mi Facebook. Las fotos que agrego al Facebook, no se integran con las que tengo en Flickr o Google Photos, y mi calendario de Google, no añade mis citas a Gmail o Yahoo! Mail ni a Facebook. Es esa integración social lo que revolucionará el futuro, todas nuestras herramientas interactuando entre sí, para que nosotros interactuemos mejor.<br /><br />¿Podría Yahoo! con estas nuevas tecnologías, dar vida y concretar el futuro Web 3.0 y convertirse en un serio competidor de Google?<br /><br />Queda por ver. Yo mientras tanto, me voy mirando <a href="http://developer.yahoo.com/yap/">YAP</a> y <a href="http://developer.yahoo.com/yql/">YQL</a>, no vaya a ser que me pille el tren.<br /><br />NOTA: Si algún día se me permite, eliminare los "captchas" de los sitios web en los que a pesar de estar loggeado con mi usuario, siguen dandome por culo... gracias blogger.com!";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:62:"http://monocaffe.blogspot.com/2008/10/yahoos-web-30-y-oss.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:29:"2008-10-19T17:43:44.512+01:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:6;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-3445406367215860311";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sat, 18 Oct 2008 18:24:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:5:{i:0;a:5:{s:4:"data";s:24:"windows ubuntu installer";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:4:"wubi";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:7:"windows";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:8:"instalar";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:4;a:5:{s:4:"data";s:6:"ubuntu";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:48:"WUBI (Impresiones) Instalar Ubuntu desde Windows";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4329:"Hace poco comence en un nuevo curro y como todo, me he tenido que amoldar a la situación de la empresa, sus políticas y sobretodo a su "Windows network". La verdad es que los comerciales de M$ han hecho un buen trabajo aquí. Lastima.<br /><br />En fin, lo intente, de verdad, lo intente. Hasta me dije: al menos podré sincronizar la PDA con el Outlook y utilizar el portal con el IE. Incluso instale Firefox, OpenOffice, Putty y cualquier cosa que pudiese acercarme a mi mundo... pero no pude continuar con Windows. Quiźas hace 11 años era algo filosófico e idealista, esmero de un joven pseudo-informático por utilizar algo "distinto" a todos lo demás. Pero hoy es mi herramienta de trabajo, no puedo utilizar otro tipo de sistema, ya que este lo conozco, lo conozco demasiado.<br /><br />Mi primer intento fue con una máquina virtual, pero fue infructífero, el VirtualBox no cumplió con mis expectativas como aplicación para Windows, ya que al revés (Windows sobre Linux), sí que funciona de maravilla.<br /><br />Esta entrada es sobre <a href="http://wubi-installer.org/">WUBI</a> y mis impresiones al respecto y por qué fue una solución como venida del cielo.<br /><br />Si te encuentras en esta situación, WUBI es para ti:<br />1. No puedes o no quieres desinstalar Windows.<br />2. Quieres compartir tus ficheros, tanto en Windows como en Linux.<br />3. Quieres algo rápido.<br /><br />Básicamente, WUBI es un programa para Windows que instala Linux. Esta es la ventana de configuración y es lo único -sí, lo único!- que debéis configurar:<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://wubi-installer.org/images/wubi.png"><img style="display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 400px;" src="http://wubi-installer.org/images/wubi.png" border="0" alt="" /></a><br /><br />Cuando pulséis OK aquí, empezará a instalarse. Dos cosas a recalcar. Como veréis en la captura, no hay nada acerca de donde va a buscar los ficheros de Ubuntu. Esto es porque los descarga automáticamente de Internet. Si por alguna razón, ya habéis descargado la imagen ISO de Ubuntu Desktop 8.04, sólo tendréis que copiarla al mismo directorio que contiene el fichero de WUBI (wubi.exe)<br /><br />Dado que sí tenía la imagen, la instalación fue bastante rápida. Así que esta ventana apareció al cabo de 10 minutos:<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://wubi-installer.org/images/wubi-reboot.png"><img style="display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 400px;" src="http://wubi-installer.org/images/wubi-reboot.png" border="0" alt="" /></a><br /><br />Y después de 15 minutos ya tenía mi Ubuntu instalado... por fin! Mi suplicio había acabado.<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://wubi-installer.org/images/ubuntu-desktop-3d_small.png"><img style="display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 400px;" src="http://wubi-installer.org/images/ubuntu-desktop-3d_small.png" border="0" alt="" /></a><br /><br />Todo funciona correctamente, los ficheros de Windows están en <tt>/host/</tt> y la instalación de Windows sigue allí, sin tocarse, ni las particiones han cambiado, es increible lo que han hecho con WUBI.<br /><br />He leído que dado que no es una instalación nativa, se pierde rendimiento. Mentira! Va excelente, tengo activados los efectos 3D, el electricsheep y todo va genial. Mi día a día es (todo en la misma máquina) de desarrollo sobre Java, por lo que al mismo tiempo tengo Eclipse, JBoss (completito), MySQL, Firefox, Evolution, 40 terminales y todo va de lujo sobre 2GB de RAM y un procesador normal (sí, ni siquiera es una dual core).<br /><br />Bueno, ahora sólo me queda acostumbrarme a este ultimo vestigio de que aquí alguna vez, trabajé con Windows:<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://wubi-installer.org/images/boot-screen.jpg"><img style="display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 400px;" src="http://wubi-installer.org/images/boot-screen.jpg" border="0" alt="" /></a>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:81:"http://monocaffe.blogspot.com/2008/10/wubi-impresiones-instalar-ubuntu-desde.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:29:"2008-10-18T20:09:57.644+01:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:7;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-7151398864606855608";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 17 Oct 2008 13:35:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:6:{i:0;a:5:{s:4:"data";s:4:"enum";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:4:"java";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:12:"persistencia";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:3:"ejb";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:4;a:5:{s:4:"data";s:11:"persistence";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:5;a:5:{s:4:"data";s:7:"varargs";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:40:"De persistencia, enums y varargs en Java";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:8333:"A pesar del tiempo que ha pasado desde la salida de la versión 1.5 de Java, muchas personas siguen sin comprender ni utilizar los <b>enum</b> y los <b>varargs</b>, quizás por falta de interés al no encontrarles ninguna utilidad. Espero haber demostrado la utilidad de los primeros con mis entradas anteriores al respecto y, más aun con la siguiente entrada, donde utilizare <b>enum</b> en su forma más básica y además explicare la utilidad de los <b>varargs</b>.<br /><br />A este respecto, vamos a centrarnos en <i>entities</i> o entidades EJB. Vamos a crear una entidad con persistencia, la cual hereda una serie de métodos para validar, antes de persistir estas entidades, que están definidas correctamente. Es obvio, que este tipo de verificaciones debería hacerlas una capa superior como un DAO, pero cuando queremos definir un EJB específico para tareas de persistencia, este tipo de verificaciones no está de más ya que no sabemos cómo va a ser utilizado el EJB una vez lo hayamos desplegado. Por otra parte, veremos cómo hacer que el EJB se comporte de distintas maneras, según lo deseemos.<br /><br />Vamos a definir una entidad llamada "MonoUser" la cual contiene los datos de un usuario de la aplicación:<br /><br /><br /><pre name="code" class="java"><br />package es.monocaffe.persistence<br /><br />...<br /><br />@Entity<br />public class MonoUser extends ValidEntity implements Serializable{<br /> @Id<br /> private int id;<br /><br /> private String name;<br /> private String lastName;<br /> private String address;<br /> private String phone;<br /> private String email;<br /> private String idDoc;<br /> <br /> @Transient<br /> protected Validation validation;<br /><br /> //Implementamos dos contructores<br /> public MonoUser(){<br />  super();<br />  //Definimos un nivel de validación por defecto<br />  this.validation = Validation.ESTRICT;<br /> }<br /><br /> //Este constructor, lo utilizaremos para especificar el nivel de validación<br /> public MonoUser(Validation validation){<br />  super();<br />  this.validation = validation;<br /><br /> //Implementación de getters/setters <br /> ...<br /><br /> @Override<br /> public boolean isValid() throws IncorrectFormatException{<br />  validateMonoUser(this);<br />  return true;<br /> }<br /><br />}<br /></pre><br /><br />Como veis, es una entidad sencilla, que simplemente, hereda de <b>ValidEntity</b> una clase abstracta con el método abstracto <b>isValid</b> el cual debemos implementar en nuestras entidades. Además, hemos utilizado el enum <b>Validation</b> para controlar el nivel de validación, con esto controlamos el comportamiento de nuestras <i>entities</i>. Será esto lo que utilizaremos para cambiar cuánto y qué deseamos validar de los datos de <i>MonoUser</i>.La clase <b>ValidEntity</b> es algo así:<br /><br /><pre name="code" class="java"><br />package es.monocaffe.persistence<br /><br />...<br /><br />public abstract class ValidEntity{<br /> public abstract boolean isValid() throws IncorrectFormatException;<br /><br /> //Ahora definimos los métodos que realizarán la validación<br /><br /> public static void validateMonoUser(MonoUser user, Validation validation) throws IncorrectFormatException{<br />  switch(validation){<br />   // Algo a lo que nunca me acostumbrare es que lo siguiente, no compila:<br />   // case Validation.ESTRICT:<br />   // case Validation.NONE:<br />   // case Validation.LAZY:<br />   // Esto nos tirará una excepción de como ésta:<br />   // The enum constant Validation.ESTRICT reference cannot be qualified in a case label<br />   // Vamos a hacerlo bien :)<br /><br />   case ESTRICT:<br />    validateIdDoc(user.getIdDoc);<br />    validateStrings(new String[] {user.getName(), user.getLastName(), user.getAddress()});<br />    validatePhone(user.getPhone());<br />    validateEmail(user.getEmail());<br />    <br />   case LAZY:<br />    validateEmail(user.getEmail());<br />   case NONE:<br />    validateUserId(user.getId());<br />    break;<br />   default:<br />    throw new java.lang.IllegalArgumentException();<br />  }<br /> }<br /><br /> public static enum Validation{<br />  ESTRICT, LAZY, NONE;<br /> }<br />  <br />}<br /></pre><br /><br />Es bastante gráfico el ejemplo de utilización de los <b>enum</b> para definir estados y opciones más concretas. Podríamos haber definido la validación utilizando <b>boolean</b> o <b>int</b> pero preguntaros ¿cuál de los siguientes ejemplos es más fácil de leer y entender?:<br /><br /><pre name="code" class="java"><br /> MonoUser myuser = new MonoUser(1);<br /> <br /> MonoUser myuser = new MonoUser(true);<br /><br /> MonoUser myuser = new MonoUser(Validation.ESTRICT);<br /></pre><br /><br />Creo que queda demostrada cual es la intención aquí, y la utilidad de los <b>enum</b>. Continuemos con <b>validateStrings</b>.<br /><br />Esto<br /><br /><pre name="code" class="java"><br /><br /> public boolean validateString(String a){ ...<br /><br /> public boolean validateString(String a, String b){ ...<br /><br /> public boolean validateString(String a, String b, String c){ ...<br /><br /> public boolean validateString(String a, String b, String c, String d){ ...<br /><br /> public boolean validateString(String a, String b, String c, String d, String e){ ...<br /><br /></pre><br /><br />Es cosa <b>del pasado</b>. Antiguo, viejo, y como alguien haga esto, deberían ponerle una etiqueta en la frente con <b>@Deprecated</b> :)<br /><br />Entran los <b>varargs</b> en acción, para poder definir un método que reciba argumentos de manera dinámica, sin tener que repetirnos 30 veces para 30 parámetros distintos. Ojo, que esto también lo podemos utilizar para <b>factories</b> aunque puede ser un poco peligroso. Este es el ejemplo de <b>validateStrings</b> con <b>varargs</b>:<br /><br /><pre name="code" class="java"><br /> public static void validateStrings(String... strings) throws IncorrectFormatException{<br /> for(String string : strings){<br />  // Haz lo que debas con cada String<br /> }<br /> }<br /></pre><br /><br />Como veis, sólo hace falta un parámetro para el método, así que podemos meter allí, cuantos <b>String</b> queramos de la siguiente manera:<br /><br /><pre name="code" class="java"><br /> // La forma limpia<br /> String[] toverify = {user.getName(), user.getLastName(), user.getAddress()};<br /> validateStrings(toverify);<br /><br /> // O como hemos visto más arriba<br /> validateStrings(new String[] {user.getName(), user.getLastName(), user.getAddress()});<br /></pre><br /><br />Para este caso concreto, quiero verificar que los datos que voy persistir, no sean inválidos y que la BB.DD. se pegue una hostia por esto. Así que supongamos que hemos definido los campos <i>name</i>, <i>lastname</i> y <i>address</i> como <tt>varchar(50)</tt>. Tenemos que evitar, que si alguno de los datos contenidos en una nueva entidad, contienen más de 50 caracteres, podamos atraparlos y tomar medidas al respecto.<br /><br />Nota: Este problema, lo tendremos al implementar la persistencia utilizando un modelo <i>bottom-up</i> o lo que es lo mismo, el esquema de la BB.DD. ya está definido y no podemos cambiarlo a complacencia. Por lo que al intentar enviar un <i>String</i> demasiado grande para un campo, tendremos problemas.<br /><br />Por último, si deseamos comentar cada elemento de un <b>enum</b> habrá que añadirle los comentarios típicos de javadoc a cada uno.<br /><br /><pre name="code" class="java"><br /> /**<br />  * ENUM para determinar distintos tipos de <br />  * validaciones<br />  */<br /> public static enum Validation{<br />  /**<br />   * Validación Estricta, se validarán todos los campos<br />   */<br />  ESTRICT,<br /><br />  /**<br />   * Validación amigable, solo validará los campos que no pueden ser 'null'<br />   */<br />  LAZY,<br /><br />  /**<br />   * Sin validación, sólo valida que el ID este definido en caso de ser necesario.<br />   */<br />  NONE;<br /> }<br /></pre><br /><br />Como siempre, espero que os sea de utilidad para mejorar vuestras aplicaciones.<br /><br />Nota2: El tema de los <i>factories</i> con <b>varargs</b> es peligros, ya que no podemos controlar el orden con el que recibimos los datos, así que podemos terminar creando un <b>MonoUser</b> con la dirección en el campo <i>name</i>.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:78:"http://monocaffe.blogspot.com/2008/10/de-persistencia-enums-y-varchars-en.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:29:"2008-10-17T15:50:00.853+01:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:8;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:4:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-7950455674211963637";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sun, 12 Oct 2008 15:46:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:3:{i:0;a:5:{s:4:"data";s:8:"inkscape";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:6:"iconos";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:20:"monocaffe desarrollo";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:25:"Iconografía de MonoCaffe";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4123:"Hoy domingo me ha dado por hacer los iconos que voy a usar en el proyecto.<br /><br />Lo más importante es mantener una gráfica constante, llamativa y explicativa, por lo que cada icono debería ser representativo del estado de cada cliente, sesiones y errores.<br /><br />Hasta ahora ésta es la iconografía (palabra que creo me he inventado :)<br /><h2>Icono azul de estado "Conectado"<br /></h2><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/_GKVx1yC7np0/SPIdDamz_GI/AAAAAAAAAgs/EhyaiSUTqek/s1600-h/New_Monocaffe_icon_blue.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://1.bp.blogspot.com/_GKVx1yC7np0/SPIdDamz_GI/AAAAAAAAAgs/EhyaiSUTqek/s400/New_Monocaffe_icon_blue.png" alt="" id="BLOGGER_PHOTO_ID_5256295659613715554" border="0" /></a><br /><h2>Icono rojo para errores<br /></h2><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://2.bp.blogspot.com/_GKVx1yC7np0/SPIdDdQE5CI/AAAAAAAAAg0/eIifTz233vo/s1600-h/New_Monocaffe_icon_error.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://2.bp.blogspot.com/_GKVx1yC7np0/SPIdDdQE5CI/AAAAAAAAAg0/eIifTz233vo/s400/New_Monocaffe_icon_error.png" alt="" id="BLOGGER_PHOTO_ID_5256295660323660834" border="0" /></a><br /><h2>Icono gris de estado "Desconectado"<br /></h2><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://3.bp.blogspot.com/_GKVx1yC7np0/SPIdDRHRUDI/AAAAAAAAAg8/iMAwc7_1Uas/s1600-h/New_Monocaffe_icon_offline.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://3.bp.blogspot.com/_GKVx1yC7np0/SPIdDRHRUDI/AAAAAAAAAg8/iMAwc7_1Uas/s400/New_Monocaffe_icon_offline.png" alt="" id="BLOGGER_PHOTO_ID_5256295657065500722" border="0" /></a><br /><h2>Icono gris para "Salir"<br /></h2><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://4.bp.blogspot.com/_GKVx1yC7np0/SPIdDkAlL0I/AAAAAAAAAhE/g6u-1xbZcg0/s1600-h/New_Monocaffe_icon_quit.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://4.bp.blogspot.com/_GKVx1yC7np0/SPIdDkAlL0I/AAAAAAAAAhE/g6u-1xbZcg0/s400/New_Monocaffe_icon_quit.png" alt="" id="BLOGGER_PHOTO_ID_5256295662137716546" border="0" /></a><br /><h2>Icono amarillo para "Warnings", sugerencias.<br /></h2><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/_GKVx1yC7np0/SPIdDl6OcvI/AAAAAAAAAhM/Ds8x7lWvQDQ/s1600-h/New_Monocaffe_icon_idle.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://1.bp.blogspot.com/_GKVx1yC7np0/SPIdDl6OcvI/AAAAAAAAAhM/Ds8x7lWvQDQ/s400/New_Monocaffe_icon_idle.png" alt="" id="BLOGGER_PHOTO_ID_5256295662647931634" border="0" /></a><br /><h2>Icono para la ayuda<br /></h2><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/_GKVx1yC7np0/SPIevVB7lgI/AAAAAAAAAhc/2c61wEpGL4E/s1600-h/New_Monocaffe_icon_help.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://1.bp.blogspot.com/_GKVx1yC7np0/SPIevVB7lgI/AAAAAAAAAhc/2c61wEpGL4E/s400/New_Monocaffe_icon_help.png" alt="" id="BLOGGER_PHOTO_ID_5256297513542718978" border="0" /></a><br /><h2>Icono verde de estado "Conectado y en sesión"<br /></h2><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://4.bp.blogspot.com/_GKVx1yC7np0/SPIevrK5Z6I/AAAAAAAAAhk/0rB_wTCXiQ8/s1600-h/New_Monocaffe_icon.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://4.bp.blogspot.com/_GKVx1yC7np0/SPIevrK5Z6I/AAAAAAAAAhk/0rB_wTCXiQ8/s400/New_Monocaffe_icon.png" alt="" id="BLOGGER_PHOTO_ID_5256297519485904802" border="0" /></a><br />Finalmente, <a href="http://alejandroayuso.googlepages.com/New_Monocaffe_icons_0.svg">esta es la fuente SVG</a> para editar en <b><a href="http://www.inkscape.org">Inkscape</a></b>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:66:"http://monocaffe.blogspot.com/2008/10/iconogrfia-de-monocaffe.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:29:"2008-10-13T18:20:02.912+01:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:29:"http://search.yahoo.com/mrss/";a:1:{s:9:"thumbnail";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"url";s:107:"http://1.bp.blogspot.com/_GKVx1yC7np0/SPIdDamz_GI/AAAAAAAAAgs/EhyaiSUTqek/s72-c/New_Monocaffe_icon_blue.png";s:6:"height";s:2:"72";s:5:"width";s:2:"72";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"3";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:9;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-7956304357460411750";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sun, 12 Oct 2008 15:20:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:29:"java blogger syntax highlight";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:26:"SyntaxHighlight en Blogger";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:864:"Despues de las anteriores entradas y del futuro de este blog, me he dado cuenta de la GRAN limitación de Blogger a la hora de mostrar código con colores y bien formateado. Buscando por Internet encontré la siguiente <a href="http://pleasemakeanote.blogspot.com/2008/06/posting-source-code-in-blogger.html">entrada</a> que explica cómo añadir fácilmente ésta herramienta.<br /><br />Por lo tanto, esta es una entrada informativa y de prueba, ya que tengo mucha curiosidad por ver esto funcionar.<br /><pre name="code" class="java"><br />package es.monocaffe.test;<br /><br />import java.util.*;<br /><br />/**<br /> * Javadoc comment<br /> */<br />public class Test{<br /> /*<br />  * Long Comment<br />  */<br /> public static void main (String [] args){<br />  //Short comment<br />  System.out.println("Hello SyntaxHighlight!");<br /> }<br />}<br /></pre>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:69:"http://monocaffe.blogspot.com/2008/10/syntaxhighlight-en-blogger.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:29:"2008-10-12T16:45:11.330+01:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:10;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:4:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-9061537834554183888";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 10 Oct 2008 14:12:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:44:"java log properties enum exception excepcion";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:44:"Excepciones versatiles + Enums + Propiedades";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:7280:"Siguiendo la dinámica propuesta por el sistema de <a href="http://monocaffe.blogspot.com/2008/10/trazas-bien-hechas.html"><b>MonoLogger</b></a>, le ha llegado la hora a las excepciones.<br />Además de utilizar otro fichero de propiedades donde vamos a definir un código de error y un mensaje, vamos a darle un buen uso a los ENUM de Java en lugar de una clase estática llena de mensajes y códigos de error (puaf puaf puag).<br /><br />Lo primero que haremos será crear nuestro fichero de propiedades en <i>es.monocaffe.exceptions</i> con lo siguiente:<br /><code><br />404=Service Not Found.<br />405=Computer Not Found.<br />406=Duplicated User, please use another code.<br />407=Duplicated Computer, please use another code.<br />408=Duplicated Value<br />409=User Not Found.<br /></code><br />Para cada uno de estos errores crearemos un nueva excepción, menos para los valores duplicados donde crearemos una excepción general <i>DuplicatedValueException</i> o algo por el estilo. Pensando en objetos, un error de usuario duplicado es una excepción de valores duplicados, por lo tanto, definiremos sólo ésta excepción y cambiaremos sólo el código y el mensaje de error.<br /><br />Un pequeño gráfico para que os hagais una idea:<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://3.bp.blogspot.com/_GKVx1yC7np0/SO9jsvOz_xI/AAAAAAAAAgM/WImgUjKxy-g/s1600-h/MonoCaffeExceptions.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://3.bp.blogspot.com/_GKVx1yC7np0/SO9jsvOz_xI/AAAAAAAAAgM/WImgUjKxy-g/s400/MonoCaffeExceptions.png" alt="" id="BLOGGER_PHOTO_ID_5255528910408646418" border="0" /></a><br />¿Qué buscamos? Pues crear un grupo de clases bien definidas para manejar las excepciones de nuestra aplicación que sean facilmente modificables sin la necesidad de tocar mucho código o mejor, nada de código.<br /><br />Lo más interesante aquí, es el uso que le doy al ENUM MCExceptions. Aquí la definición:<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/_GKVx1yC7np0/SO9lDI9vyxI/AAAAAAAAAgU/iYuAAJ2-HIw/s1600-h/code1.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://1.bp.blogspot.com/_GKVx1yC7np0/SO9lDI9vyxI/AAAAAAAAAgU/iYuAAJ2-HIw/s400/code1.png" alt="" id="BLOGGER_PHOTO_ID_5255530394785139474" border="0" /></a><br />Como podeis ver, a cada elemento de la enumeración le asignamos un valor, el cual corresponde<br />al código de error que manejamos en el fichero de propiedades. Además, incluimos el mensaje, cargandolo desde el objeto <i>ExceptionsMessages</i>, quien devuelve el mensaje que tenemos en el fichero, utilizando el código de error. Esta clase <i>ExceptionMessages</i> es <b>igual</b> a la clase que definimos para las trazas en la entrada anterior, pero olvidandonos de lo referente a las trazas y centrandonos en la carga desde el fichero de propiedades.<br /><br />Lo siguiente será crear las Excepciones en si. Como buena práctica, es siempre aconsejable que vayamos a definir unas excepciones que funcionen de forma diferente, crear una clase descendiente de Exception y a partir de ésta, definir nuestras propias excepciones.<br /><br />Por otra parte, no hay que abusar de esto, y utilizar en lo posible, las excepciones propias de las librerias que estemos utilizando. Por ejemplo, no deseamos crear una excepción para referencias a Objetos nulos (<i>NullPointerException</i>) o excepciones como <i>SintaxisJDBCIncorrecta</i>. Recordar que el uso de las excepciones estandar, tiene la ventaja de la familiaridad que estas presentan para los desarrolladores, quienes reconoceran más rapidamente una NPException o una IOException a alguna otra que nosotros hayamos creado.<br /><br />Vamos a crear la excepción <i>MonoCaffeGeneralException</i>:<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/_GKVx1yC7np0/SO9lhQE2UEI/AAAAAAAAAgc/EueIwjFSP_c/s1600-h/code2.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://1.bp.blogspot.com/_GKVx1yC7np0/SO9lhQE2UEI/AAAAAAAAAgc/EueIwjFSP_c/s400/code2.png" alt="" id="BLOGGER_PHOTO_ID_5255530912090050626" border="0" /></a><br />Como veis, aquí empezamos a utilizar nuestro enum: MDExceptions. Este nos va a proveer con el código de error y el mensaje de error el cual mandamos a Exception y que luego podremos utilizar en nuestro código.<br /><br />A continuación definiremos las excepciones especificas a cada caso que deseemos controlar. El ejemplo más útil para esto, es la <i>DuplicatedValuesException</i> la cual utilizaremos para distintos códigos de error, en lugar de definir una excepción para cada tipo de valor que pueda ser duplicado: User, PC, Client, etc. Vamos a contruir esa excepción:<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://2.bp.blogspot.com/_GKVx1yC7np0/SO9ltBqUWYI/AAAAAAAAAgk/QZPa2dg9Fwo/s1600-h/code3.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://2.bp.blogspot.com/_GKVx1yC7np0/SO9ltBqUWYI/AAAAAAAAAgk/QZPa2dg9Fwo/s400/code3.png" alt="" id="BLOGGER_PHOTO_ID_5255531114379106690" border="0" /></a><br />Cada contructor tiene una aplicación específica, dejando gran libertad al usuario de esta excepción a hacer casí lo que quiera. En el primer caso el programador no tiene ganas de pensar en mensajes ni código de error, sólo en lanzar la excepción y continuar, entonces puede utilizar el primer contructor que generá una excepción de valores duplicados generica y con los mensajes que tenemos definidos.<br /><br />La segunda excepción permite específicar un mensaje de error. Este contructor es opcional y deberiamos forzar a que cada nuevo error deba ser definido<br />en el fichero de propiedades y en el enum, antes de poder continuar, pero me siento condescendiente.<br /><br />El tercero es el que más vamos a utilizar siempre y cuando tengamos definido en el enum el error que deseamos mostrar. Este contructor, tomara la mensaje<br />asociado al código de error y lo utilizará para lanzar la excepción.<br /><br />Otra excepciones más específicas como <i>UserNotFoundException</i>, sólo deberia definir el primer tipo de contructor, para mantener un mensaje y código de error<br />constante a lo largo de la aplicación y sin hacernos pensar cada vez que lo utilicemos. Sólo con escribir:<br /><code><br />throw new UserNotFoundException();<br /></code><br />será suficiente.<br /><br />Tambien podriamos seguir el mismo diseño utilizado para los valores duplicados y crear una excepción <i>ObjectNotFound</i>.<br /><br />Para utilizar en nuestro código estas excepciones hariamos algo como:<br /><pre name="code" class="java"><br />throw new DuplicateValueException();  //El valor es duplicado<br />//...<br />throw new DuplicateValueException(MCExceptions.DUP_USER); //El usuario está duplicado<br />//...<br />throw new DuplicateValueException("Ese DNI/NIF/CIF ya existe");  //Una excepción poco habitual<br /></pre><br />Eso es todo, espero que os sea de utilidad.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:71:"http://monocaffe.blogspot.com/2008/10/excepciones-versatiles-enums.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:29:"2008-10-12T16:42:51.945+01:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:29:"http://search.yahoo.com/mrss/";a:1:{s:9:"thumbnail";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"url";s:103:"http://3.bp.blogspot.com/_GKVx1yC7np0/SO9jsvOz_xI/AAAAAAAAAgM/WImgUjKxy-g/s72-c/MonoCaffeExceptions.png";s:6:"height";s:2:"72";s:5:"width";s:2:"72";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:11;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-1308923354005042997";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 02 Oct 2008 18:21:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:65:"java log4j log trazas PropertyResourceBundle properties debugging";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:18:"Trazas bien hechas";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4692:"Una parte muy importante de cualquier aplicación es la de realizar trazas o logs. ¿Dónde estaríamos sin estas?<br />Para MonoCaffe he desarrollado hoy esta solución que viene en gran medida a cierta experiencia en este tema.<br />En primer lugar, hay que seleccionar una tecnologia para esto, y yo escogí Log4j de la Fundacion Apache por su facilidad y por los buenos resultados que me ha dado.<br />Muchos tutoriales y artículos en Internet se enfrascan en explicar la configuración de log4j que es un tema tratado hasta la saciedad y bastante sencillo en cuanto se entiende cada una de las partes.<br />Es en su uso donde dejan mucho que desear, y a lo que viene ésta entrada, mostrar cómo hacer bien un sistema de trazas el cual se puede utilizar con cualquier librería que utilicemos.<br />La idea es sencilla, un "singleton" será quien se encargue de realizar las trazas.<br />En muchos tutoriales os encontrareis con esto:<br /><code><br />static Logger logger = Logger.getLogger(MyClass.class);<br />...<br />logger.debug("Mensaje de debug");<br /></code><br />Lo cual está bien y funciona, pero lo hace  difícil de mantener y propenso a errores, por ejemplo, olvidarnos de ponerlo. Otro ejemplo es si cambiamos la librería, en lugar de utilizar, tendríamos que cambiar los imports de TODAS las clases de la aplicación!<br /><br />La solución a esto sería definir una clase especifica para esto que llamaremos MonoLogger.<br /><code><br />package es.monocaffe.logging;<br />import org.apache.log4j;<br />public class MonoLogger(){<br />   private final static Logger logger = Logger.getLogger("MonoCaffe");<br />}<br /></code><br />Lo siguiente será añadir los métodos que escriban al Logger:<br /><code><br />public static void writeError(Object message){<br />   logger.error(message);<br />}<br /></code><br />Lo mismo para "WARN", "DEBUG" e "INFO". Si paramos aquí, ya tendremos a MonoLogger listo para recibir nuestras trazas:<br /><code><br />MonoLogger.writeError("Esto es un error");<br /></code><br /><br />Pero vayamos más allá y vamos a añadir un fichero de propiedades a todo esto, donde almacenaremos los mensajes que deseemos enviar al usuario o a otros programadores y una sorpresa especial. Gracias a <i>java.util.PropertyResourceBundle</i> podemos crear un fichero <i>monologs.properties</i> y definir una serie de mensajes utilizando un formato de clave=valor, como si de un Hash se tratase (al fin y al cabo, los objetos Properties, son hijos de de Hashmap).<br />Creamos el fichero dentro del mismo paquete o directorio que MonoLogger y añadimos lo siguiente:<br /><code><br />#Esto es un comentario<br /><br />client_not_found=No se ha encontrado el cliente que busca.<br />format_error=Error en el formato de entrada<br />null_assert=¿Pero qué haces?¿null?<br />this_is_an_error=Esto es un error<br />debug=true<br /></code><br />Lo siguiente que necesitamos es "cargar" la información del fichero properties en la aplicación:<br /><code style="font-size: xx-small;"><br />private static final PropertyResourceBundle monomessages = PropertyResourceBundle.getBundle("monologs.properties");<br /></code><br />Y añadir un par de métodos que servirán para obtener los mensajes que están en las propiedades.<br /><i>¿Qué error estamos cometiendo aquí? Más abajo la solución.</i><br /><code><br />public static String getMessage(String key){<br />   return monomessages.getString(key);<br />}<br /></code><br />De esta manera, si queremos escribir un error como el anterior:<br /><code><br />MonoLogger.writeError(MonoLogger.getMessage("this_is_an_error"));<br /></code><br />Con esta práctica podremos cambiar todo el lenguaje de la aplicación, cambiando ficheros properties y sin la necesidad de compilar el código.<br />Finalmente, y lo que más me gusta de todo esto, es la posibilidad de activar/desactivar las trazas de debugging sin compilar y en un solo sitio con la propiedad <i>debug</i> que hemos metido en el fichero de propiedades:<br /><code><br />private static boolean debug = doDebugging();<br />...<br />public static boolean doDebugging(){<br />   String ret = getMessage("debug");<br />   return Boolean.valueOf(ret);<br />}<br /></code><br />De esta manera, podremos añadir libremente en nuestro código lineas como:<br /><code><br />MonoLogger.writeDebug("Esto es un mensaje de Dios");<br /></code><br />Y solo aparecerán cuando la propiedad debug sea true.<br />El error anterior está en que, si el fichero no existe, nos lanzará una excepción como una casa, por lo que es mejor meter esa lógica dentro de un método estático, capturar las excepción y devolver un <i>PropertyResourceBundle</i>.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:61:"http://monocaffe.blogspot.com/2008/10/trazas-bien-hechas.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:29:"2008-10-02T20:30:12.095+01:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"2";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:12;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-1860196409278667240";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 20 Aug 2008 15:46:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:20:"ssh error buffer_get";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:12:"Error de SSH";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:516:"Hoy he tenido la suerte de resolver un problema con un servidor al que no podíamos conectar con un usuario específico. Viendo las trazas en el fichero <i>/vat/log/secure</i> aparece el siguiente error:<br /><br /><code>fatal: buffer_get: trying to get more bytes than in buffer</code><br /><br />No busquéis, no hace falta, hay una linea en el fichero <i>.ssh/authorized_keys</i> que está mala. Probad a borrar todas las lineas o la linea perteneciente al cliente desde el que os conectáis y debería funcionar.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:55:"http://monocaffe.blogspot.com/2008/08/error-de-ssh.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:29:"2008-08-20T16:51:19.300+01:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:13;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-1383278064541874631";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 14 Aug 2008 09:34:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:37:"video juegos wish estadisticas camper";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:28:"Estádisticas en Videojuegos";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3179:"Desde hace ya unos meses tengo un vicio absoluto con Call of Duty 4, quizás por eso tengo tan retrasado el Monocaffe, mea culpa. Lo importante es que ya he llegado al nivel 10 y ahora voy a por la Dragunov Dorada.<br />Una de las cosas que más me gustan del CoD4 es la cantidad de estadísticas que maneja:<br />muertes infligidas<br />muertes recibidas<br />precisión<br />tiros a la cabeza<br />etc.<br />Lo normal en los FPS vamos. Pero por qué no ir más lejos y definir un nivel de estadísticas aún mayor acerca del comportamiento del jugador. Incluso definir niveles o tipos basados en estas estadísticas.<br />Algunos ejemplos que se me ocurren serían, por ejemplo, la eterna lucha entre los jugadores agresivos y los pasivos (campers). Un nivel de camping podría ser medido utilizando el tiempo que el jugador mantiene un misma posición, definiendo waypoints en todo el mapa (lo que ya se hace para la IA) y calcular un promedio de visitas de los distintos waypoints, los cuales a su vez definen un valor según las posibilidades que tienen estos waypoints de convertirse en puntos de campeo (camping-point). Claro que no todos los jugadores que mantienen una serie de posiciones constantes son campers, ya que en muchos casos se utilizan las clases de francotirador, pero esto se puede controlar también, midiendo la posición, arma utilizada -es estúpido campear con un rifle, por lo general lo hacen con una escopeta :( - y punto de vista.<br />Utilizando estas mismas mediciones en base a los waypoints, se podrían tipificar a otros tipos de jugadores, como los agresivos, tácticos y n00bs.<br />Un jugador agresivo (o tonto) se pasará el rato recorriendo los waypoints en, por lo general, una línea recta bastante bien definida.<br />Los jugadores tácticos son una mezcla entre los agresivos y los campers, ya que van recorriendo los waypoints, deteniéndose cierto tiempo, para luego buscar otro punto de ventaja o de conveniencia.<br />Otra medida interesante, es la rapidez con que los jugadores mejoran sus estadísticas. Sería como una mezcla entre BrainTraining y FPS. Cuan rápido el jugador es capaz de recorrer, de manera optima, los distintos waypoints, alcanzando la mayor cantidad de frags. Cual es el nivel de pensamiento abstracto del jugador, midiendo su capacidad de encontrar, rápidamente, waypoints de alta efectividad y bajo riesgo sin importar su posición inicial y en estricta relación con la posición de los enemigos.<br />Hay miles de cosas que se pueden medir en un videojuego y que no se ven reflejadas en las estadísticas estándar.<br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://mystery-man.com/wordpress/wp-content/uploads/2007/12/call-of-duty-4-ps3-4.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer; width: 312px; height: 202px;" src="http://mystery-man.com/wordpress/wp-content/uploads/2007/12/call-of-duty-4-ps3-4.png" alt="" border="0" /></a><br />En fin, me gustaría que los FPS del futuro te dijeran: "soldado, su edad mental es de 75 años. Menos mal que no estas en combate real", "Eres un puto camper, juega bien otia!"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:69:"http://monocaffe.blogspot.com/2008/08/estdisticas-en-videojuegos.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:29:"2008-08-14T12:32:05.681+01:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"3";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:14;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:4:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-3278423564328340709";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 08 Aug 2008 12:46:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:5:{i:0;a:5:{s:4:"data";s:5:"linux";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:8:"pconsole";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:10:"terminator";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:18:"multiples consolas";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:4;a:5:{s:4:"data";s:6:"ubuntu";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:40:"Una consola para controlarlas todas (II)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:1243:"<span style="font-size:85%;"><span style="font-family: verdana;">En la entrada anterior comentaba la aplicación "pconsole" que nos permite controlar varias xterms a la vez. Esto es bastante útil, pero la verdad es que el comportamiento no era optimo. Básicamente mi problema estaba en tener varias ventanas de xterm colmando la lista de ventanas y otros problemas que esto acarrea.</span><br /><span style="font-family: verdana;">Por consiguiente instale "Terminator" una consola que podemos dividir en varias consolas, todas contenidas dentro de una misma ventana.</span><br /><span style="font-family: verdana;">Con esta nueva configuración tengo dentro de una misma ventana ocho consolas, una ejecutando "pconsole" y las otras siete bajo control de pconsole.</span></span><br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/_GKVx1yC7np0/SJxCWGhKXfI/AAAAAAAAAZw/IFHtrM9eWGI/s1600-h/Pantallazo-Terminator.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://1.bp.blogspot.com/_GKVx1yC7np0/SJxCWGhKXfI/AAAAAAAAAZw/IFHtrM9eWGI/s400/Pantallazo-Terminator.png" alt="" id="BLOGGER_PHOTO_ID_5232129814571933170" border="0" /></a>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:81:"http://monocaffe.blogspot.com/2008/08/una-consola-para-controlarlas-todas-ii.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:29:"2008-08-08T13:56:23.584+01:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:29:"http://search.yahoo.com/mrss/";a:1:{s:9:"thumbnail";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"url";s:105:"http://1.bp.blogspot.com/_GKVx1yC7np0/SJxCWGhKXfI/AAAAAAAAAZw/IFHtrM9eWGI/s72-c/Pantallazo-Terminator.png";s:6:"height";s:2:"72";s:5:"width";s:2:"72";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:15;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:4:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-2515228471773890013";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 30 Jul 2008 13:21:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:40:"ubuntu linux pconsole multiples consolas";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:35:"Una consola para controlarlas todas";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3004:"<span style="font-size:85%;"><span style="font-family:verdana;">Hoy he descubierto "<span style="font-style: italic;">pconsole</span>" una aplicación muy útil a la hora de realizar labores repetitivas en distintos servidores.</span><br /><span style="font-family:verdana;">Ejemplo, hay que realizar unas tareas <span style="font-weight: bold;">X</span> en una cantidad de servidores <span style="font-weight: bold;">Y</span> que son iguales (un cluster quizás).</span><br /><span style="font-family:verdana;">En lugar de ir uno a uno, realizando <span style="font-weight: bold;">X</span>, ejecutamos unas cuantas <span style="font-style: italic;">xterm</span>'s y se las damos a <span style="font-style: italic;">pconsole</span>.</span><br /><span style="font-family:verdana;">Es muy sencillo de utilizar. En Ubuntu Hardy Heron, sólo hace falta ejecutar</span><br /></span><code  style="font-family:verdana;"><span style="font-size:85%;"><br />sudo aptitude install pconsole</span></code><span style="font-size:85%;"><span style="font-family:verdana;"><br /><br />A continuación abrimos <span style="font-weight: bold;">Y+1</span> cantidad de <span style="font-style: italic;">xterm</span>'s y en cada una ejecutamos:</span><br /></span><code  style="font-family:verdana;"><span style="font-size:85%;"><br />tty</span></code><span style="font-size:85%;"><span style="font-family:verdana;"><br /><br />Lo cual nos devuelve (como todo en Linux) la ruta del fichero de la terminal. Por ejemplo /dev/pts/5</span><br /><br /><span style="font-family:verdana;">Lo siguiente será ejecutar "<span style="font-style: italic;">pconsole</span>" en la <span style="font-style: italic;">xterm</span> <span style="font-weight: bold;">Y+1</span>. Esto abrirá "<span style="font-style: italic;">pconsole</span>" y nos mostrará una especia de CLI distinta. Aquí ejecutamos:</span><br /></span><code  style="font-family:verdana;"><span style="font-size:85%;"><br />attach /dev/pts/5 /dev/pts/3 /dev/pts/4 ...</span></code><span style="font-size:85%;"><span style="font-family:verdana;"><br /><br />Ahora pasamos al "Modo de Envio" con Ctrl+D y todo lo que escribimos en "pconsole" se escribe en las consolas que estan adjuntas.<br /><br /></span><br /><a style="font-family: verdana;" onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp2.blogger.com/_GKVx1yC7np0/SJBtx025HrI/AAAAAAAAAZo/rQ7LDHrpo7U/s1600-h/Pantallazo.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://bp2.blogger.com/_GKVx1yC7np0/SJBtx025HrI/AAAAAAAAAZo/rQ7LDHrpo7U/s400/Pantallazo.png" alt="" id="BLOGGER_PHOTO_ID_5228799870147042994" border="0" /></a><br /><br /><span style="font-family:verdana;">Existen otras aplicaciones como cssh que permiten abrir varias conexiones de SSH paralelas, pero lo encuentro un poco lento y no funciona muy bien (en mi caso) pero también es una herramienta a considerar si no podemos ejecutar pconsole.<br /></span></span>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:78:"http://monocaffe.blogspot.com/2008/07/una-consola-para-controlarlas-todas.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:29:"2008-07-30T14:43:25.725+01:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:29:"http://search.yahoo.com/mrss/";a:1:{s:9:"thumbnail";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"url";s:92:"http://bp2.blogger.com/_GKVx1yC7np0/SJBtx025HrI/AAAAAAAAAZo/rQ7LDHrpo7U/s72-c/Pantallazo.png";s:6:"height";s:2:"72";s:5:"width";s:2:"72";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:16;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:4:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-7609923613133773966";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sat, 26 Jul 2008 12:10:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:20:"monocaffe desarrollo";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:35:"Iniciando el proyecto (MonoCaffe 1)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4712:"<span style="font-size:85%;"><span style="font-family:verdana;">La idea original de este blog (la cual no he desarrollado aun) es la de describir y documentar el ciclo de vida que sigue MonoCaffe. Como todo proyecto de software, espero que sea constante y vaya evolucionando entre versiones.</span><br /><span style="font-family:verdana;">Antes de nada, me he documentado e incluso estoy colaborando en la </span><a style="font-family: verdana;" href="http://producingoss.com/es/">traducción</a><span style="font-family:verdana;"> de un libro titulado </span><a style="font-family: verdana;" href="http://producingoss.com/">Producing Open Source Software</a><span style="font-family:verdana;"> de Karl Fogel donde se explican muy bien las herramientas, implicaciones, responsabilidad y muchos temas más sobre el desarrollo de un proyecto de software libre.</span><br /><span style="font-family:verdana;">Lo siguiente ha sido elegir las herramientas para la labor. En el caso de MonoCaffe, he elegido:</span><br /></span><ul  style="font-family:verdana;"><li><span style="font-size:85%;">Java (libre, conocido, fácil y multiplataforma).</span></li><li><span style="font-size:85%;">Swing.<br /></span></li><li><span style="font-size:85%;">HSQLDB.</span></li><li><span style="font-size:85%;"><a href="http://sourceforge.net/projects/monocaffe/">Sourceforge</a> para el hosting del proyecto (CVS, foros, sitio web, etc.)</span></li></ul><span style="font-size:85%;"><span style="font-family:verdana;">Lo siguiente ha sido crear el <a href="http://monocaffe.sourceforge.net/">sitio web</a>. Utilizando herramientas como Inkscape fui capaz de crear todas las imágenes del sitio (e iconos para la aplicación). Luego con vim crear todo el contenido HTML/CSS ha sido un paseo de dos dias.</span><br /><br /><span style="font-family:verdana;">Con el CVS listo y funcionando, la página montada y las herramientas calientes, me he lanzado a realizar el analisis funcional de la aplicación utilizando UML (Dia Diagram Editor)  para ilustrar gráficamente todo esto. Así que ahora mismo tenemos UML's describiendo la aplicación con algunos requerimientos, sus especificaciones funcionales y dos diagramas de flujo para los clientes y para el usuario del administrador.</span><br /><br /><a style="font-family: verdana;" onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp0.blogger.com/_GKVx1yC7np0/SIsc7E5r4cI/AAAAAAAAAZQ/o2OytnftB1Y/s1600-h/MonoCaffe_2.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://bp0.blogger.com/_GKVx1yC7np0/SIsc7E5r4cI/AAAAAAAAAZQ/o2OytnftB1Y/s400/MonoCaffe_2.png" alt="" id="BLOGGER_PHOTO_ID_5227303593747145154" border="0" /></a><a style="font-family: verdana;" onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp0.blogger.com/_GKVx1yC7np0/SIsc7dzm_II/AAAAAAAAAZY/-gn2qNBjFXs/s1600-h/MonoCaffe_HighLevel_Design.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://bp0.blogger.com/_GKVx1yC7np0/SIsc7dzm_II/AAAAAAAAAZY/-gn2qNBjFXs/s400/MonoCaffe_HighLevel_Design.png" alt="" id="BLOGGER_PHOTO_ID_5227303600432544898" border="0" /></a><span style="font-family:verdana;">Dado que vamos a almacenar todos los datos relativos a la aplicación para poder generar distintos reportes de uso, usuarios, etc. Va a ser necesario un medio de almacenamiento persistente, es decir, una BBDD. No he elegido productos como MySQL para facilitar la instalación sin la intervención del usuario. Así que lo siguiente ha sido el modelado de los datos para la BBDD. Siguendo el modelo de objetos que he definido he llegado a un modelo bastante sencillo de qué debería tener la BBDD de MonoCaffe:</span><br /><br /><a style="font-family: verdana;" onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp1.blogger.com/_GKVx1yC7np0/SIsewcM_5UI/AAAAAAAAAZg/zlh0P1PFru4/s1600-h/Database_Design.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://bp1.blogger.com/_GKVx1yC7np0/SIsewcM_5UI/AAAAAAAAAZg/zlh0P1PFru4/s400/Database_Design.png" alt="" id="BLOGGER_PHOTO_ID_5227305610046858562" border="0" /></a><br /><span style="font-family:verdana;">Algo bastante sencillo y obviando temas importantes como las dependencias funcionales y metadatos y saltando directamente a la normalización.</span><br /><br /><span style="font-family:verdana;">Con lo mínimo ya preparado (tengo ganas de picar código) se abre NetBeans, checkout del proyecto desde el CVS y a ver qué sale.</span><br /><br /><span style="font-family:verdana;">Continuara...</span><br /></span>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:76:"http://monocaffe.blogspot.com/2008/07/iniciando-el-proyecto-monocaffe-1.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:29:"2008-07-26T14:06:42.289+01:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:29:"http://search.yahoo.com/mrss/";a:1:{s:9:"thumbnail";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"url";s:93:"http://bp0.blogger.com/_GKVx1yC7np0/SIsc7E5r4cI/AAAAAAAAAZQ/o2OytnftB1Y/s72-c/MonoCaffe_2.png";s:6:"height";s:2:"72";s:5:"width";s:2:"72";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:17;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:4:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-2980133800143678427";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sat, 26 Jul 2008 11:04:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:42:"software libre soporte desarrollo criticas";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:23:"Cuando lo gratis cuesta";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4765:"<span style="font-family: verdana;font-size:85%;" >El principal problema al hablar de software libre es aclarar su gratuidad. Sí, por definición si es libre es gratis, pero no es así. Es gratis descargarlo y utilizarlo, pero es mucho más. Un Freeware sólo es gratuito, pero sigue imponiendo restricciones sobre el usuario. El libre no impone nada más que su libertad. <a href="http://en.wikipedia.org/wiki/Gratis_versus_Libre">Gratis vs. Libre</a>.<br />Es irresponsable por parte de un departamento de informática o de los usuarios, vivir en esta burbuja de gratuidad y reducción de costes en la que puede sumergirnos el software libre.<br />Una de las primeras cosas que aprendí de niño es que nada en la vida es gratis, todo acarrea un precio, una responsabilidad, unas consecuencias.<br />En el caso del software libre, el precio es cero. Al principio. El modelo de negocio de las empresas que permiten la libre distribución del código fuente de sus aplicaciones es el de ofrecer servicios de soporte, resolución de incidencias, etcétera, sobre sus productos.<br />Es responsabilidad del usuario, darse cuenta de esto y actuar en concordancia a sus efectos. No por utilizar una producto como MySQL, vamos a dar por sentado que siempre vamos a encontrar respuestas a nuestras clemencias en los foros y chats de Internet (aunque es bastante probable). Tampoco es necesario mantener un equipo de programadores que nos permitan resolver nuestros problemas con una aplicación, sólo hay que contactar con el licensatario del software y pagar. Libre no significa grátis.<br />La libertad para el usuario llega aquí: ¿Qué hago? Nos permite hacernos esta pregunta y resolverla adecuandonos a la situación en la que nos encontramos. Para muchas empresas, crear un equipo de desarrollo, pruebas, QA y demás, es innecesario y altamente costoso, pero para otras, esto puede aportarles beneficios. El ejemplo más claro, sería en la redistribución de una aplicación propia que utilice estas tecnologias.<br />El software libre puede ser estructurado en diferentes niveles de usabilidad empresarial, dependiendo en sobremanera del nivel de soporte que se pueden encontrar. Aplicaciones como OpenOffice, MySQL, Ubuntu, RedHat y muchos, muchos más, son producidas por empresas, no por comunidades. Es importante ver claramente esto y diferenciarlas.<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp2.blogger.com/_GKVx1yC7np0/SIsSVCq1KnI/AAAAAAAAAZI/AlMMCfM4ALA/s1600-h/proyectos.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://bp2.blogger.com/_GKVx1yC7np0/SIsSVCq1KnI/AAAAAAAAAZI/AlMMCfM4ALA/s400/proyectos.png" alt="" id="BLOGGER_PHOTO_ID_5227291945196661362" border="0" /></a><br />Un proyecto de software libre no es siempre desarrollado por quinceañeros encerrados en su habitación. Por lo tanto no podemos esperar el mismo nivel de confianza, soporte y resolución de incidencias entre distintos proyectos, pero podemos seguir eligiendo.<br />Como ejemplo claro, tomemos Monocaffe, un proyecto propio que poco a poco voy sacando adelante. Es un proyecto en el cual, por ahora, soy el únido desarrollador pero que gracias a muchos productos de software libre (NetBeans, Java, MySQL, SVN, Swing, Hibernate, Apache, Linux y Rhythmbox :) permiten que un individuo pueda crear. ¿Volvemos a los tiempos en los que para desarrollar una aplicación era necesario pagar por todo esto?¿Realmente queremos limitar tanto la creación individual para que sean sólo los beneficios economicos los que muevan los hilos del desarrollo tecnologico? Creo que no.<br />Si en un futuro, miles de negocios empiezan a utilizar MonoCaffe, no pueden esperar un nível de soporte más allá del tiempo que tenga para resolverlas, a menos que me empiecen a pagar e inicie una empresa para ofrecerles estos servicios... sería perfecto :)<br />Esta es la cruda realidad de algunos proyectos, pero no de todos. Nada más lejos de la realidad. Algunos proyectos nacen con un enfoque totalmente empresarial, diferenciandose de otros por la libertad de su código, lo que los hace tremendamente competitivos tal como ha sucedido con MySQL el cual ha logrado ser el motor de BBDD por defecto de la web. Si nuestra empresa, por alguna razón, no puede resolver algún problema aún incluso despues de investigar por la web, simpre se tiene la opción, la elección, de pagar. Y si queremos cambiar, cambiamos.<br />Cualquier crítica hacia este modelo tiene cabida, somos libres de criticar. Pero que este modelo falla es una gran falacia cuando<a href="http://apache.slashdot.org/article.pl?sid=08/07/25/2135202"> el más grande del sector lo tantea</a>.<br /></span>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:66:"http://monocaffe.blogspot.com/2008/07/cuando-lo-gratis-cuesta.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:29:"2008-07-26T13:04:14.646+01:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:29:"http://search.yahoo.com/mrss/";a:1:{s:9:"thumbnail";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"url";s:91:"http://bp2.blogger.com/_GKVx1yC7np0/SIsSVCq1KnI/AAAAAAAAAZI/AlMMCfM4ALA/s72-c/proyectos.png";s:6:"height";s:2:"72";s:5:"width";s:2:"72";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"2";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:18;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:8:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-4172454490235752558";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 10 Jul 2008 10:39:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:17:"nav erp microsoft";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:31:"Cuando Microsoft me hace sufrir";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:7106:"<span style="font-size:85%;"><span style="font-family:verdana;">Como os podéis imaginar por el titulo del blog y las entradas que llevo escritas, soy un fanboy del movimiento Open Source. Tanto que en cuanto pueda echarle las manos encima al OpenMoko, lo haré. Tanto, que el día que el OpenSDK de Java fue certificado, casí llore.</span><br /><span style="font-family:verdana;">Estos dias he estado inmerso en un curso para aprender Microsoft Navision. Me he visto forzado a ejecutar la jodida maquina virtual de Windows XP e instalar este engrendo endemoniado tambien llamado NAV.</span><br /><br /><span style="font-family:verdana;">Es realmente doloroso, en serio. Son todo ventanas, hay que utilizar el ratón para todo y esto hace que cualquier tarea se vuelva una tortura de repeticiones.</span><br /><br /><span style="font-family:verdana;">La siguiente desviación de la realidad es el lenguaje C/AL y el editor incorporado: en mi vida había encontrado semejante esperpento de editor. En serio, el Notepad es 100 veces mejor. El lenguaje no está mal, tiene unos cuantos WTF! pero es el editor el que te hace pensar cómo alguien en su sano juicio podría alguna vez barajar la posibilidad de pagar por esto.</span><br /><br /><br /></span><div style="text-align: center;"><object width="320" height="266" class="BLOG_video_class" id="BLOG_video-376fe9a08c0f0517" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="movie" value="http://www.blogger.com/img/videoplayer.swf?videoUrl=http%3A%2F%2Fvp.video.google.com%2Fvideodownload%3Fversion%3D0%26secureurl%3DqAAAAKXn9zyzXTyW6NoE_4ojujpAorb7HL-LOuqxjz8fASuC94mlgExpfxSjM9Zopy-OO9D8EdaY9upUfTgBBFYGwdVQ2W-fjpdAFR1ibjobLnASV6vZTzIDN_fTjMCANiopMtN4WTcnjuL3-0ka4nDsebFWRIAJMOPbfsZiDoQLoDUGfpj-5yp1C4Ar7OOpAt_YAjpzO0h6uIwN5Uzg6iHbBP3nh_G4T4JgPnBPfTwOa15T%26sigh%3DZ8EiY0jtxfNwbpX8sHWFUHBCw0Q%26begin%3D0%26len%3D86400000%26docid%3D0&amp;nogvlm=1&amp;thumbnailUrl=http%3A%2F%2Fvideo.google.com%2FThumbnailServer2%3Fapp%3Dblogger%26contentid%3D376fe9a08c0f0517%26offsetms%3D5000%26itag%3Dw320%26sigh%3DIff1TgzuOI3mJ9BHTojPCRPGjkQ&amp;messagesUrl=video.google.com%2FFlashUiStrings.xlb%3Fframe%3Dflashstrings%26hl%3Den">
<param name="bgcolor" value="#FFFFFF">
<embed width="320" height="266" src="http://www.blogger.com/img/videoplayer.swf?videoUrl=http%3A%2F%2Fvp.video.google.com%2Fvideodownload%3Fversion%3D0%26secureurl%3DqAAAAKXn9zyzXTyW6NoE_4ojujpAorb7HL-LOuqxjz8fASuC94mlgExpfxSjM9Zopy-OO9D8EdaY9upUfTgBBFYGwdVQ2W-fjpdAFR1ibjobLnASV6vZTzIDN_fTjMCANiopMtN4WTcnjuL3-0ka4nDsebFWRIAJMOPbfsZiDoQLoDUGfpj-5yp1C4Ar7OOpAt_YAjpzO0h6uIwN5Uzg6iHbBP3nh_G4T4JgPnBPfTwOa15T%26sigh%3DZ8EiY0jtxfNwbpX8sHWFUHBCw0Q%26begin%3D0%26len%3D86400000%26docid%3D0&amp;nogvlm=1&amp;thumbnailUrl=http%3A%2F%2Fvideo.google.com%2FThumbnailServer2%3Fapp%3Dblogger%26contentid%3D376fe9a08c0f0517%26offsetms%3D5000%26itag%3Dw320%26sigh%3DIff1TgzuOI3mJ9BHTojPCRPGjkQ&amp;messagesUrl=video.google.com%2FFlashUiStrings.xlb%3Fframe%3Dflashstrings%26hl%3Den" type="application/x-shockwave-flash"></embed></object>
</div><br /><span style="font-size:85%;"><span style="font-family:verdana;">No tengo claro si es algo de la aplicación, del lenguaje o del editor, pero al &amp;·$%&amp;·&amp;% que se le ocurrio la genial y grandiosa idea de forzarme a declarar variables y funciones utilizando otra maldita ventana le digo: MUERE! No tienes manera de saber las variables declaradas desde el código, tienes que abrir OTRA VENTANA. Al menos las funciones si aparecen declaradas con su parámetros. Si alguien que lea esto entiende el por qué de un razonamiento tan aislado de la realidad, que me lo explique.</span><br /></span><br /><span style="font-size:85%;"><span style="font-family:verdana;">¿Qué es NAV? Pues es un ERP. A mi me parece más un Access97 que utiliza un lenguaje raro y SQLServer (otra pesadilla por su parte) pero estamos en el año 2008!!!</span><br /><br /><span style="font-family:verdana;">¿Qué es un ERP? Pues no lo sé, en la Wikipedia habla de un montón de tonterias. Para mi, es una aplicación desarrollada por algún genio de la tortura. </span><br /><br /><span style="font-family:verdana;">Por otra parte, tienen sus ventajas. No hablo de NAV, hablo de otros ERP's (OpenBravo, SAP, PeopleSoft). Te permiten ahorrar en costes de desarrollo y tener aplicaciones empresariales verdaderas (no MS Excel) ya que las Hojas de Calculo (Excel para los lusers) no son BBDD, no son aplicaciones. Estas aplicaciones vienen con cierta estrúctur</span></span><span style="font-size:85%;"><span style="font-family:verdana;">a básica que en unos meses permitira a cualquier empresa continuar y mejorar el negocio. Sin estos ERP's cada empresa seria, tendría que contratar a un equipo de desarrollo para producir sus propias herramientas y todos los problemas que esto acarrea. Aunque el ERP sea más sencillo de aprender y poner en marcha, igualmente será necesario un equipo dedicado a este tema, ya sea para generar nuevos informes, nuevos formularios o cualquier otra cosa que se le puedo ocurrir al departamento de turno. Sin contar con el soporte a los mismos:</span><br /><span style="font-family:verdana;">Luser: "He metido mal una factura"</span><br /><span style="font-family:verdana;">Yo: "Pues anulala"</span><br /><span style="font-family:verdana;">Luser: "¿Cómo?" [a ver si pensamos un poquito]</span><br /><span style="font-family:verdana;">Yo: "Soy informático, no contable"</span><br /><span style="font-family:verdana;">Luser: "Pero es un problema del programa"</span><br /><span style="font-family:verdana;">Yo: "Si, se llama meatware"</span></span><span style="font-size:85%;"><br /><span style="font-family:verdana;">Luser: "Qué?"</span><br /><span style="font-family:verdana;">Yo: "Nada... y si pruebas hacer las misma factura con valores negativos?"</span><br /><span style="font-family:verdana;">Luser: "Para qué?"</span><br /><span style="font-family:verdana;">Yo: "Callate y dejame terminar. Luego metes bien la factura"</span><br /><span style="font-family:verdana;">Luser: "Así tengo tres facturas"</span><br /><span style="font-family:verdana;">Yo: [Mirala, si sabe sumar] "¿y? Así cuadras todo y me dejas en paz"</span><br /><span style="font-family:verdana;">Luser: "No puedes eliminar la factura?"</span><br /><span style="font-family:verdana;">Yo: "No, descuadras el tema... no sé el qué, pero lo descuadras... vas a seguir malgastando mi tiempo?"</span></span><span style="font-size:85%;"><br /></span><br /><span style="font-size:85%;"><span style="font-family:verdana;">En fin, al menos es más chatarra que meter en el curriculum. Sólo espero terminar pronto con esto y volver a mi submundo de Java, Linux y Eclipse.</span><br /><br /><span style="font-family:verdana;">Nota: hasta ahora no he encontrado nada en estas aplicaciones que un equipo de desarrollo de tres personas, a tiempo completo, no puedan tener listo (funcional Beta 1) en 6 meses. Es todo cuestión de barajar costes.</span></span>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"enclosure";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"type";s:9:"video/mp4";s:3:"url";s:81:"http://www.blogger.com/video-play.mp4?contentId=376fe9a08c0f0517&type=video%2Fmp4";s:6:"length";s:1:"0";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:74:"http://monocaffe.blogspot.com/2008/07/cuando-microsoft-me-hace-sufrir.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:29:"2008-07-10T16:54:30.135+01:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:19;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:4:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-4896206166703894117";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sat, 03 May 2008 14:44:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:28:"zenburn ubuntu colores temas";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:14:"Ubuntu Zenburn";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4481:"<span style="font-size:85%;"><span style="font-family:verdana;">Zenburn es un esquema de colores para el editor de textos gVim y ha sido portado de distintas formas para distintas aplicaciones. Son colores de bajo contraste que realmente ayudan en reducir la fatiga visual que sufrimos al estar tantas horas frente a la pantalla del PC.<br />Para conocer Zenburn podemos empezar con la <a href="http://slinky.imukuppi.org/zenburnpage/">página de Zenburn</a> y descargando el fichero .vim el cual debemos mover a la carpeta <span style="font-weight: bold;">$HOME/.vim/colors/zenburn.vim</span><br />A continuación en vim ejecutamos los comandos <span style="font-weight: bold;">:syntax on</span> y <span style="font-weight: bold;">:colorscheme zenburn</span>... pero nada sucede!<br />El problema es que antes debemos configurar algunas cosas en nuestro sistema, sin entrar en detalles, los colores de la consola. En general, las consolas o terminales soportan los 256 colores necesarios para Zenburn y especificamente <span style="font-weight: bold;">gnome-terminal</span> la soporta, solo debemos decirle que la utilice. Para esto debemos instalar el paquete ncurses-term: <span style="font-weight: bold;">sudo aptitude install ncurses-term</span><br />A continuación debemos declarar la variable de entorno TERM para que los utilice: <span style="font-weight: bold;">export TERM="xterm-256color"</span><br />Ahora volvermos a ejecutar vim y tendremos algo como esto:<br /><br /></span></span><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://slinky.imukuppi.org/zenburn/zenburn.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer; width: 400px;" src="http://slinky.imukuppi.org/zenburn/zenburn.png" alt="" border="0" /></a><br /><span style="font-size:85%;"><span style="font-family:verdana;">Pero no nos vamos a detener aquí, continuemos con los colores de gnome-terminal. Si abrimos el fichero zenburn.vim encontraremos los códigos RGB de los colores utilizados y podremos utilizarlos para modificarlos. Creamos un nuevo perfíl llamado "Zenburn" y cambiamos los colores siguiendo al máximo los especificados en el fichero.<br /><br /></span></span><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp0.blogger.com/_GKVx1yC7np0/SByEcLg6taI/AAAAAAAAAGQ/xwYlaFOMehM/s1600-h/pantallazo1.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://bp0.blogger.com/_GKVx1yC7np0/SByEcLg6taI/AAAAAAAAAGQ/xwYlaFOMehM/s400/pantallazo1.png" alt="" id="BLOGGER_PHOTO_ID_5196173689740768674" border="0" /></a><span style="font-size:85%;"><span style="font-family:verdana;"><br />Ahora pensemos en grande! Vamos a cambiar el tema de todo GNOME para que incluso Eclipse (el cual es un coñazo de configurar ya que no utiliza temas) los use por defecto. Incluso el Firefox cambiara los colores, excepto de las areas de texto como en la que estoy escribiendo ahora mismo.<br />Exite un tema que viene por defecto en Ubuntu 8.04 llamado Human Murrine que ha sido modificado por karmaflux para conseguir los colores de Zenburn y lo podeis encontrar en <a href="http://www.ubuntu-art.org/content/show.php/Zenburn-Murrine?content=77577">Zenburn-Murrine</a> en www.ubuntu-art.org<br />Finalmente podeis utilizar este fondo de escritorio que le viene al dedo al tema: <a href="http://www.gnome-look.org/content/show.php/Stone+Gnome?content=78351">Stone-Gnome </a><br /><br /></span></span><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp1.blogger.com/_GKVx1yC7np0/SByHdbg6tcI/AAAAAAAAAGg/W_UELedVNlE/s1600-h/Pantallazo.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://bp1.blogger.com/_GKVx1yC7np0/SByHdbg6tcI/AAAAAAAAAGg/W_UELedVNlE/s400/Pantallazo.png" alt="" id="BLOGGER_PHOTO_ID_5196177009750488514" border="0" /></a><span style="font-size:85%;"><span style="font-family:verdana;"><br />Para automatizar todo esto debemos modificar el fichero .vimrc y añadir los comandos anteriores. De igual manera, si añadimos al fichero .bashrc lo siguiente:</span></span><br /><code><br />if [ "$COLORTERM" == "gnome-terminal" ] ; then<br />export TERM="xterm-256color"<br />fi<br /></code><span style="font-size:85%;"><span style="font-family:verdana;"><br />No tendremos problemas con las sesiones SSH que iniciemos a nuestro PC.<br /></span></span>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:57:"http://monocaffe.blogspot.com/2008/05/ubuntu-zenburn.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:29:"2008-05-03T16:47:00.442+01:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:29:"http://search.yahoo.com/mrss/";a:1:{s:9:"thumbnail";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"url";s:93:"http://bp0.blogger.com/_GKVx1yC7np0/SByEcLg6taI/AAAAAAAAAGQ/xwYlaFOMehM/s72-c/pantallazo1.png";s:6:"height";s:2:"72";s:5:"width";s:2:"72";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"4";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:20;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-2849051227678452003";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 22 Apr 2008 00:06:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:54:"editores estupidez pantalla completa linux windows mac";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:20:"Editores Full Screen";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2844:"<span style="font-size:85%;"><span style="font-family:verdana;">Quizás si algún fan de Apple lee esto no le guste, espero no herir sentimientos, pero estoy sintiendo cierta tendencia a dar popularidad a una idea estúpida, vieja y que siendo por lo visto algo "nuevo" de Tiger (o de donde puñetas a Steve Jobs le haya dado la gana meterlo) llamado "WriteRoom". Voy a resumir qué es: un vim/emacs/nano/ed para gilipollas. Pero es que además, la interfaz es "verde fósforo". ¿Crean un sistema operativo con cualquier cantidad de polladas y gráficos y animaciones como el Tiger para luego utilizar "eso"?</span><br /><span style="font-family:verdana;">Por otra parte, puede que sea yo, pero me da a mi que la estupidez se contagia, porque vienen unos y dicen: "Hmmmm... buena idea, vamos a llevarlo a la web" y toma, un sitio en AJAX que ni siquiera voy a enlazar. Ah! Pero tenemos .Net y una gran cantidad de herramientas, librerias, un IDE super mega chupi y cantidades ingentes de estupidez: toma DarkRoom y toma Q10. Que además son de código cerrado. ¿Será que les da miedo que alguien vea como hacer semejante "programa"?</span><br /><span style="font-family:verdana;">Especialmente me molesto la página de Q10 donde explicitamente pone: "No version for Linux or Mac is planned." No lo necesitamos! Esa gilipolles de software existe desde la prehistoria de la computación!</span><br /><span style="font-family:verdana;">Eso me molesto, pero lo que realmente me pone los pelos de punta es que luego "usuarios" de Linux van y se bajan el programa para luego ejecutarlo con Wine!!!</span><br /><span style="font-family:verdana;">¿Quieres un editor pantalla completa? ¿Qué tal si te pulsas Ctrl+Alt+F1 y ejecutas el puto vi que viene por defecto en cualquier distribución... Joder, es que en cualquier instalación de Unix y derivados viene por defecto, allí, esperando. Cambia los colores a la consola y listo!</span><br /><span style="font-family:verdana;">Para rematar el tema, estos editores de ultima generación integran correctores ortográficos, temas  de colores y quien sabe, quizás en un futuro alguna brillante mente piense mientras está escribiendo en estas aplicaciones de ultima generación: "y si añado marcas a mi texto para..."</span><br /><span style="font-family:verdana;">Nada, mejor será que en la próxima versión del MacOSX HelloKitty los gurus de Apple se re inventen el TeX. O mejor aun, saquen una nueva versión HKP (HelloKittyPages) que "increíblemente" te permitirá añadir cosas tan guays como referencias y enlaces.</span><br /><span style="font-family:verdana;">A ver si al menos así terminan de matar al jodido MSWord y dejan de enviarme "pantallazos" en un fichero .doc</span><br /><span style="font-family:verdana;">Esto me pasa por leer blogs a estas horas... ainsh...</span></span>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:63:"http://monocaffe.blogspot.com/2008/04/editores-full-screen.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:29:"2008-04-22T01:36:54.216+01:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:21;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:4:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-7330531377082689360";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 18 Apr 2008 12:23:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:27:"tarjeta personal java friki";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:23:"Tarjeta Personal (Java)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:1465:"Siguiendo la idea de Luis en su blog <a href="http://malcodigo.blogspot.com/2008/04/tarjeta-de-programador_15.html">Mal Código</a> me he currado una tarjeta personal con InkScape para valorar y contrastar los resultados. En la entrada original Luis utiliza Haskell para su tarjeta, en este caso he utilizado Java.<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp1.blogger.com/_GKVx1yC7np0/SAiTuFI_UYI/AAAAAAAAAGI/AUw_S-VuZPE/s1600-h/tarjeta.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://bp1.blogger.com/_GKVx1yC7np0/SAiTuFI_UYI/AAAAAAAAAGI/AUw_S-VuZPE/s400/tarjeta.png" alt="" id="BLOGGER_PHOTO_ID_5190560990407643522" border="0" /></a>El código, en caso de que no sea legible dice algo así:<br /><code><br />package the.world.spain.madrid;<br />public class BusinessCard{<br />   public static void main(String[] args){<br />      IngInformatico aayuso = new IngInformatico();<br />      aayuso.setFullName("Alejandro Ayuso");<br />      aayuso.setProfile("Programador");<br />      aayuso.setContactNumber("**********");<br />      aayuso.setEmailAddress("*************** at yahoo.com");<br />   }<br />   class IngInformatico extends HumanBeing{<br />      private String fullname, profile, contact, email;<br />      public void setFullName(String s){<br />         fullname = s;<br />      }<br />      ...<br />   }<br />}<br /></code><br />Ideas?";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:64:"http://monocaffe.blogspot.com/2008/04/tarjeta-personal-java.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:29:"2008-04-18T13:31:33.424+01:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:29:"http://search.yahoo.com/mrss/";a:1:{s:9:"thumbnail";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"url";s:89:"http://bp1.blogger.com/_GKVx1yC7np0/SAiTuFI_UYI/AAAAAAAAAGI/AUw_S-VuZPE/s72-c/tarjeta.png";s:6:"height";s:2:"72";s:5:"width";s:2:"72";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:22;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-2309234223308670911";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 02 Apr 2008 15:43:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:18:"bash stderr stdout";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:21:"stderr, stdout y más";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4747:"<span style="font-size:85%;"><span style="font-family:verdana;">En uno de los posts anteriores explique un poco el tema del stdin y stdout. Sabemos que podemos encauzar la salida (stdout) de un programa como entrada para otro (stdin) y de esta manera realizar tareas complejas utilizando herramientas sencillas.</span><br /><span style="font-family:verdana;">A parte de estos dos descriptores, tenemos el stderr o salida de errores. Básicamente, stderr es lo mismo que stdout pero contiene posibles errores que el programa quiera reportar por pantalla al usuario.</span><br /><span style="font-family:verdana;">Por ejemplo, vamos a utilizar un error producido por "cat" y lo vamos a almacenar en un fichero utilizando ">"</span><br /><span style="font-family:verdana;"><blockquote>$cat foo.txt > foo.log</blockquote></span><br /><span style="font-family:verdana;">En este caso, foo.txt <span style="font-weight: bold;">no</span> existe. Dado que ">" es utilizado sólo para stdout, el fichero foo.log será creado, pero está <span style="font-weight: bold;">vacío</span>. En cambio, podremos ver en la consola el error devuelto por stderr:</span><br /><span style="font-style: italic;font-family:verdana;" >cat: foo.txt: No such file or directory</span><br /><span style="font-family:verdana;">Si queremos capturar este mensaje de error en un fichero foo.err tendremos que añadir el número "2" a ">":</span><br /><span style="font-family:verdana;"><blockquote>cat foo.txt 2> foo.log</blockquote></span><br /><span style="font-family:verdana;">Aquí le estamos indicando a Bash que capture el descriptor número 2 (stderr) y lo envié al fichero. Recordemos que stdin es 0 y stdout es 1.</span><br /><span style="font-family:verdana;">De igual manera podemos mezclar stdout y stderr. La utilidad de esto la encontramos cuando queremos ejecutar algún programa de forma automática (utilizando cron, por ejemplo) o desde un script y deseamos capturar toda la información posible en algún fichero al que podamos acceder posteriormente.</span><br /><span style="font-family:verdana;">Entonces, el tema es bastante sencillo. Vamos a hacer un "tail" de dos ficheros y todas las salidas vamos a enviarlas a dos ficheros foo.out y foo.err.</span><br /><span style="font-family:verdana;"><blockquote>$tail /var/log/dmesg foo.txt >foo.out 2>foo.err</blockquote></span><br /><span style="font-family:verdana;">dmesg sabemos que existe, por lo tanto las ultimas lineas devueltas por "tail" serán capturadas por el stdout al fichero foo.out. En cambio el error devuelto al no encontrar el fichero foo.txt será enviado por stderr a foo.err:</span><br /><span style="font-style: italic;font-family:verdana;" >tail: cannot open foo.txt for reading: No such file or directory</span><br /><span style="font-family:verdana;">También podemos enviar las dos salidas a un único fichero e incluso encauzarlas como stdin para otro programa. En el primer caso vamos a utilizar "2>&amp;1" lo cual vamos a ver en muchos scripts.</span><br /><span style="font-family:verdana;"><blockquote>$tail /var/log/dmesg foo.txt >foo.out 2>&amp;1</blockquote></span><br /><span style="font-family:verdana;">La mejor manera de silenciar a un programa para que no perturbe la ejecución de nuestro script es enviar todas las salidas a /dev/null.</span><br /><span style="font-family:verdana;"><blockquote>$tail /var/log/dmesg foo.txt >/dev/null 2>&amp;1</blockquote></span><br /><span style="font-family:verdana;">Si nuestro script necesita ejecutar otro programa y necesita sólo de su "exit status" el usuario que ejecuta el script no verá cuales programas estamos utilizando y no recibirá los posibles errores que de otra manera aparecerían en pantalla.<br />En segundo lugar, podemos realizar otro tipo de comprobaciones dirigiendo stderr y stdout como stdin de otro programa. Supongamos que creamos un script que sólo funciona con OpenSSH. Para comprobar que la versión que está instalada en el sistema es OpenSSH podemos utilizar lo siguiente:<br /><blockquote>$/usr/bin/ssh -v 2>&amp;1 | grep -q OpenSSH ; echo $?<br />0</blockquote><br />Si nuestro cliente de SSH no fuera el OpenSSH obtendriamos lo siguiente:<br /></span></span><span style="font-size:85%;"><span style="font-family:verdana;"><blockquote>$/usr/bin/ssh -v 2>&amp;1 | grep -q OpenSSH ; echo $?<br />1</blockquote>En el caso de que nuestra versión de "grep" no tenga la opción "q quiet" volvemos a utilizar /dev/null<br /><blockquote>ssh -v 2>&amp;1 | grep OpenSSH >/dev/null 2>&amp;1 ; echo $?<br />0<br /></blockquote><br />Donde <span style="font-weight: bold;">$?</span> es una variable que contiene el "exit status" del último comando ejecutado, en este ejemplo es grep.<br /></span></span>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:61:"http://monocaffe.blogspot.com/2008/04/stderr-stdout-y-ms.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:29:"2008-04-02T17:41:47.417+01:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:23;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-1625680646565187082";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 26 Mar 2008 16:05:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:33:"bash linux sustitucion parametros";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:27:"Sustitución de parámetros";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2601:"<small><span style="font-family:verdana;">Los sistemas Linux y otros Unix traen las típicas herramientas como cut, awk y sed para reemplazar o recortar partes de una variable, pero los verdaderos "gurus" utilizan la sustitución de parámetros. Vamos a explicar esto en varios pasos:<br /><br />1-) Las variables pueden ser referenciadas con $var o con ${var}<br /></span></small><blockquote><small><span style="font-family:verdana;">VAR='lorem ipsum';<br />echo $VAR;<br />echo ${VAR};<br /></span></small></blockquote><small><span style="font-family:verdana;">2-) La longitud de una variable la obtenemos con ${#VAR}<br /></span></small><blockquote><small><span style="font-family:verdana;">echo ${#VAR} -&gt; 1<br /></span></small></blockquote><small><span style="font-family:verdana;">3-) Obtenemos un substring de la variable con ${VAR:POS}<br /></span></small><blockquote><small><span style="font-family:verdana;">echo ${VAR:6} -&gt; ipsum<br /></span></small></blockquote><small><span style="font-family:verdana;">4-) También podemos obtener un substring del tamaño que deseamos con ${VAR:POS:LON}<br /></span></small><blockquote><small><span style="font-family:verdana;">echo ${VAR:0:6} -&gt; lorem<br /></span></small></blockquote><small><span style="font-family:verdana;">5-) Si deseamos dividir según un patrón de izquierda a derecha utilizamos ${var#pat} o ${var##pat}<br /></span></small><blockquote><small><span style="font-family:verdana;">VAR2='lorem,ipsum.,datum.sanctum'<br />echo ${var2#*,} -&gt; ipsum.,datum.sanctum<br />echo ${var2##*,} -&gt; datum.sanctum<br /></span></small></blockquote><small><span style="font-family:verdana;">6-) De derecha a izquierda es ${var%pat} o ${var%%pat}<br /></span></small><blockquote><small><span style="font-family:verdana;">echo ${var2%,*} -&gt; lorem,ipsum.<br />echo ${var2%%,*} -&gt; lorem<br /></span></small></blockquote><small><span style="font-family:verdana;">7-) La sustitución es igual de sencilla ${var/pat/ree} o ${var//pat/ree}<br /></span></small><blockquote><small><span style="font-family:verdana;">echo ${var2/m/M} -&gt; loreM,ipsum.,datum.sanctum<br />echo ${var2//m/M} -&gt; loreM,ipsuM.,datuM.sanctuM<br /></span></small></blockquote><small><span style="font-family:verdana;">OK? Un uso muy interesante de todo esto? Por ejemplo, para renombrar muchos ficheros de IMAGEN a imagen:<br /></span></small><blockquote><small><span style="font-family:verdana;">for i in *<br />do<br />mv ${i} ${i/IMAGEN/imagen}<br />done<br /></span></small></blockquote><small><span style="font-family:verdana;">    Magia!</span></small>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:66:"http://monocaffe.blogspot.com/2008/03/sustitucin-de-parmetros.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:24:"2008-03-26T16:06:51.507Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:24;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:7:{s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:70:"tag:blogger.com,1999:blog-5022667766051686813.post-1633456181605246008";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 25 Mar 2008 14:11:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:17:"bash linux script";s:7:"attribs";a:1:{s:0:"";a:1:{s:6:"domain";s:31:"http://www.blogger.com/atom/ns#";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:7:"Script!";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:1358:"<span style="font-family:verdana;">Script es una aplicación muy, pero que muy útil para todos aquellos quienes como yo somos un tanto olvidadizos. Además, configurando correctamente nuestro PS1 podemos generar reportes de uso.</span><br /><span style="font-family:verdana;">Script sencillamente almacena todo que aparece en pantalla después de que se ejecuta. Por ejemplo:</span><br /><br /><span style="font-family:verdana;">$script -a /tmp/log.txt</span><br /><br /><span style="font-family:verdana;">De ahora en adelante, toda la sesión será almacenada en el fichero indicado. Para terminar pulsamos Ctrl+D</span><br /><br /><span style="font-family:verdana;">Pero la opción realmente chula de script es -f. Supongamos que tenemos a un usuario nuevo y queremos "monitorizar" lo que hace. Hacemos que éste ejecute:</span><br /><br /><span style="font-family:verdana;">$script -f -a /tmp/luser.log</span><br /><br /><span style="font-family:verdana;">Luego para ver lo que está haciendo en tiempo real utilizamos tail:</span><br /><br /><span style="font-family:verdana;">#tail -f /tmp/luser.log</span><br /><br /><span style="font-family:verdana;">Muchos juegos se le pueden dar a esta aplicación tan útil. Por cierto, no intenten ejecutarla desde el .bashrc que por alguna razón crea varios procesos repitiendo la salida de los comandos</span>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:49:"http://monocaffe.blogspot.com/2008/03/script.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:32:"noreply@blogger.com (Ubersoldat)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:24:"2008-03-25T14:44:47.695Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/syndication/thread/1.0";a:1:{s:5:"total";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}s:39:"http://a9.com/-/spec/opensearchrss/1.0/";a:3:{s:12:"totalResults";a:1:{i:0;a:5:{s:4:"data";s:2:"51";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:10:"startIndex";a:1:{i:0;a:5:{s:4:"data";s:1:"1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:12:"itemsPerPage";a:1:{i:0;a:5:{s:4:"data";s:2:"25";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}}}}}}s:7:"headers";a:8:{s:12:"content-type";s:34:"application/rss+xml; charset=UTF-8";s:13:"last-modified";s:29:"Wed, 10 Dec 2008 17:19:55 GMT";s:13:"cache-control";s:17:"max-age=0 private";s:4:"etag";s:26:"W/A0INRHo4fSp7ImA9WxRbGU8.";s:17:"transfer-encoding";s:7:"chunked";s:4:"date";s:29:"Fri, 26 Dec 2008 12:45:53 GMT";s:22:"x-content-type-options";s:7:"nosniff";s:6:"server";s:7:"GFE/1.3";}s:5:"build";d:20080315205903;}